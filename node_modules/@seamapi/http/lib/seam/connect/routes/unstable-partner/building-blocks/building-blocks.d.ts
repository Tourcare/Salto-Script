import type { RouteRequestBody, RouteResponse } from '@seamapi/types/connect';
import { type Client } from '../../../../../../lib/seam/connect/client.js';
import { type SeamHttpFromPublishableKeyOptions, type SeamHttpOptions, type SeamHttpOptionsWithApiKey, type SeamHttpOptionsWithClient, type SeamHttpOptionsWithClientSessionToken, type SeamHttpOptionsWithConsoleSessionToken, type SeamHttpOptionsWithPersonalAccessToken, type SeamHttpRequestOptions } from '../../../../../../lib/seam/connect/options.js';
import { SeamHttpRequest } from '../../../../../../lib/seam/connect/seam-http-request.js';
import { SeamPaginator } from '../../../../../../lib/seam/connect/seam-paginator.js';
import type { SetNonNullable } from '../../../../../../lib/types.js';
export declare class SeamHttpUnstablePartnerBuildingBlocks {
    client: Client;
    readonly defaults: Required<SeamHttpRequestOptions>;
    readonly ltsVersion = "1.0.0";
    static ltsVersion: string;
    constructor(apiKeyOrOptions?: string | SeamHttpOptions);
    static fromClient(client: SeamHttpOptionsWithClient['client'], options?: Omit<SeamHttpOptionsWithClient, 'client'>): SeamHttpUnstablePartnerBuildingBlocks;
    static fromApiKey(apiKey: SeamHttpOptionsWithApiKey['apiKey'], options?: Omit<SeamHttpOptionsWithApiKey, 'apiKey'>): SeamHttpUnstablePartnerBuildingBlocks;
    static fromClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken'], options?: Omit<SeamHttpOptionsWithClientSessionToken, 'clientSessionToken'>): SeamHttpUnstablePartnerBuildingBlocks;
    static fromPublishableKey(publishableKey: string, userIdentifierKey: string, options?: SeamHttpFromPublishableKeyOptions): Promise<SeamHttpUnstablePartnerBuildingBlocks>;
    static fromConsoleSessionToken(consoleSessionToken: SeamHttpOptionsWithConsoleSessionToken['consoleSessionToken'], workspaceId: SeamHttpOptionsWithConsoleSessionToken['workspaceId'], options?: Omit<SeamHttpOptionsWithConsoleSessionToken, 'consoleSessionToken' | 'workspaceId'>): SeamHttpUnstablePartnerBuildingBlocks;
    static fromPersonalAccessToken(personalAccessToken: SeamHttpOptionsWithPersonalAccessToken['personalAccessToken'], workspaceId: SeamHttpOptionsWithPersonalAccessToken['workspaceId'], options?: Omit<SeamHttpOptionsWithPersonalAccessToken, 'personalAccessToken' | 'workspaceId'>): SeamHttpUnstablePartnerBuildingBlocks;
    createPaginator<const TResponse, const TResponseKey extends keyof TResponse>(request: SeamHttpRequest<TResponse, TResponseKey>): SeamPaginator<TResponse, TResponseKey>;
    updateClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken']): Promise<void>;
    connectAccounts(parameters?: UnstablePartnerBuildingBlocksConnectAccountsParameters, options?: UnstablePartnerBuildingBlocksConnectAccountsOptions): UnstablePartnerBuildingBlocksConnectAccountsRequest;
    generateMagicLink(parameters?: UnstablePartnerBuildingBlocksGenerateMagicLinkParameters, options?: UnstablePartnerBuildingBlocksGenerateMagicLinkOptions): UnstablePartnerBuildingBlocksGenerateMagicLinkRequest;
    manageDevices(parameters?: UnstablePartnerBuildingBlocksManageDevicesParameters, options?: UnstablePartnerBuildingBlocksManageDevicesOptions): UnstablePartnerBuildingBlocksManageDevicesRequest;
    organizeSpaces(parameters?: UnstablePartnerBuildingBlocksOrganizeSpacesParameters, options?: UnstablePartnerBuildingBlocksOrganizeSpacesOptions): UnstablePartnerBuildingBlocksOrganizeSpacesRequest;
}
export type UnstablePartnerBuildingBlocksConnectAccountsParameters = RouteRequestBody<'/unstable_partner/building_blocks/connect_accounts'>;
/**
 * @deprecated Use UnstablePartnerBuildingBlocksConnectAccountsParameters instead.
 */
export type UnstablePartnerBuildingBlocksConnectAccountsBody = UnstablePartnerBuildingBlocksConnectAccountsParameters;
/**
 * @deprecated Use UnstablePartnerBuildingBlocksConnectAccountsRequest instead.
 */
export type UnstablePartnerBuildingBlocksConnectAccountsResponse = SetNonNullable<Required<RouteResponse<'/unstable_partner/building_blocks/connect_accounts'>>>;
export type UnstablePartnerBuildingBlocksConnectAccountsRequest = SeamHttpRequest<UnstablePartnerBuildingBlocksConnectAccountsResponse, 'magic_link'>;
export interface UnstablePartnerBuildingBlocksConnectAccountsOptions {
}
export type UnstablePartnerBuildingBlocksGenerateMagicLinkParameters = RouteRequestBody<'/unstable_partner/building_blocks/generate_magic_link'>;
/**
 * @deprecated Use UnstablePartnerBuildingBlocksGenerateMagicLinkParameters instead.
 */
export type UnstablePartnerBuildingBlocksGenerateMagicLinkParams = UnstablePartnerBuildingBlocksGenerateMagicLinkParameters;
/**
 * @deprecated Use UnstablePartnerBuildingBlocksGenerateMagicLinkRequest instead.
 */
export type UnstablePartnerBuildingBlocksGenerateMagicLinkResponse = SetNonNullable<Required<RouteResponse<'/unstable_partner/building_blocks/generate_magic_link'>>>;
export type UnstablePartnerBuildingBlocksGenerateMagicLinkRequest = SeamHttpRequest<UnstablePartnerBuildingBlocksGenerateMagicLinkResponse, 'magic_link'>;
export interface UnstablePartnerBuildingBlocksGenerateMagicLinkOptions {
}
export type UnstablePartnerBuildingBlocksManageDevicesParameters = RouteRequestBody<'/unstable_partner/building_blocks/manage_devices'>;
/**
 * @deprecated Use UnstablePartnerBuildingBlocksManageDevicesParameters instead.
 */
export type UnstablePartnerBuildingBlocksManageDevicesBody = UnstablePartnerBuildingBlocksManageDevicesParameters;
/**
 * @deprecated Use UnstablePartnerBuildingBlocksManageDevicesRequest instead.
 */
export type UnstablePartnerBuildingBlocksManageDevicesResponse = SetNonNullable<Required<RouteResponse<'/unstable_partner/building_blocks/manage_devices'>>>;
export type UnstablePartnerBuildingBlocksManageDevicesRequest = SeamHttpRequest<UnstablePartnerBuildingBlocksManageDevicesResponse, 'magic_link'>;
export interface UnstablePartnerBuildingBlocksManageDevicesOptions {
}
export type UnstablePartnerBuildingBlocksOrganizeSpacesParameters = RouteRequestBody<'/unstable_partner/building_blocks/organize_spaces'>;
/**
 * @deprecated Use UnstablePartnerBuildingBlocksOrganizeSpacesParameters instead.
 */
export type UnstablePartnerBuildingBlocksOrganizeSpacesBody = UnstablePartnerBuildingBlocksOrganizeSpacesParameters;
/**
 * @deprecated Use UnstablePartnerBuildingBlocksOrganizeSpacesRequest instead.
 */
export type UnstablePartnerBuildingBlocksOrganizeSpacesResponse = SetNonNullable<Required<RouteResponse<'/unstable_partner/building_blocks/organize_spaces'>>>;
export type UnstablePartnerBuildingBlocksOrganizeSpacesRequest = SeamHttpRequest<UnstablePartnerBuildingBlocksOrganizeSpacesResponse, 'magic_link'>;
export interface UnstablePartnerBuildingBlocksOrganizeSpacesOptions {
}
