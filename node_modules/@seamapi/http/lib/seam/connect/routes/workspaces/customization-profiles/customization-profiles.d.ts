import type { RouteRequestBody, RouteResponse } from '@seamapi/types/connect';
import { type Client } from '../../../../../../lib/seam/connect/client.js';
import { type SeamHttpFromPublishableKeyOptions, type SeamHttpOptions, type SeamHttpOptionsWithApiKey, type SeamHttpOptionsWithClient, type SeamHttpOptionsWithClientSessionToken, type SeamHttpOptionsWithConsoleSessionToken, type SeamHttpOptionsWithPersonalAccessToken, type SeamHttpRequestOptions } from '../../../../../../lib/seam/connect/options.js';
import { SeamHttpRequest } from '../../../../../../lib/seam/connect/seam-http-request.js';
import { SeamPaginator } from '../../../../../../lib/seam/connect/seam-paginator.js';
import type { SetNonNullable } from '../../../../../../lib/types.js';
export declare class SeamHttpWorkspacesCustomizationProfiles {
    client: Client;
    readonly defaults: Required<SeamHttpRequestOptions>;
    readonly ltsVersion = "1.0.0";
    static ltsVersion: string;
    constructor(apiKeyOrOptions?: string | SeamHttpOptions);
    static fromClient(client: SeamHttpOptionsWithClient['client'], options?: Omit<SeamHttpOptionsWithClient, 'client'>): SeamHttpWorkspacesCustomizationProfiles;
    static fromApiKey(apiKey: SeamHttpOptionsWithApiKey['apiKey'], options?: Omit<SeamHttpOptionsWithApiKey, 'apiKey'>): SeamHttpWorkspacesCustomizationProfiles;
    static fromClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken'], options?: Omit<SeamHttpOptionsWithClientSessionToken, 'clientSessionToken'>): SeamHttpWorkspacesCustomizationProfiles;
    static fromPublishableKey(publishableKey: string, userIdentifierKey: string, options?: SeamHttpFromPublishableKeyOptions): Promise<SeamHttpWorkspacesCustomizationProfiles>;
    static fromConsoleSessionToken(consoleSessionToken: SeamHttpOptionsWithConsoleSessionToken['consoleSessionToken'], workspaceId: SeamHttpOptionsWithConsoleSessionToken['workspaceId'], options?: Omit<SeamHttpOptionsWithConsoleSessionToken, 'consoleSessionToken' | 'workspaceId'>): SeamHttpWorkspacesCustomizationProfiles;
    static fromPersonalAccessToken(personalAccessToken: SeamHttpOptionsWithPersonalAccessToken['personalAccessToken'], workspaceId: SeamHttpOptionsWithPersonalAccessToken['workspaceId'], options?: Omit<SeamHttpOptionsWithPersonalAccessToken, 'personalAccessToken' | 'workspaceId'>): SeamHttpWorkspacesCustomizationProfiles;
    createPaginator<const TResponse, const TResponseKey extends keyof TResponse>(request: SeamHttpRequest<TResponse, TResponseKey>): SeamPaginator<TResponse, TResponseKey>;
    updateClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken']): Promise<void>;
    create(parameters?: WorkspacesCustomizationProfilesCreateParameters, options?: WorkspacesCustomizationProfilesCreateOptions): WorkspacesCustomizationProfilesCreateRequest;
    get(parameters?: WorkspacesCustomizationProfilesGetParameters, options?: WorkspacesCustomizationProfilesGetOptions): WorkspacesCustomizationProfilesGetRequest;
    list(parameters?: WorkspacesCustomizationProfilesListParameters, options?: WorkspacesCustomizationProfilesListOptions): WorkspacesCustomizationProfilesListRequest;
    update(parameters?: WorkspacesCustomizationProfilesUpdateParameters, options?: WorkspacesCustomizationProfilesUpdateOptions): WorkspacesCustomizationProfilesUpdateRequest;
    uploadImages(parameters?: WorkspacesCustomizationProfilesUploadImagesParameters, options?: WorkspacesCustomizationProfilesUploadImagesOptions): WorkspacesCustomizationProfilesUploadImagesRequest;
}
export type WorkspacesCustomizationProfilesCreateParameters = RouteRequestBody<'/workspaces/customization_profiles/create'>;
/**
 * @deprecated Use WorkspacesCustomizationProfilesCreateParameters instead.
 */
export type WorkspacesCustomizationProfilesCreateBody = WorkspacesCustomizationProfilesCreateParameters;
/**
 * @deprecated Use WorkspacesCustomizationProfilesCreateRequest instead.
 */
export type WorkspacesCustomizationProfilesCreateResponse = SetNonNullable<Required<RouteResponse<'/workspaces/customization_profiles/create'>>>;
export type WorkspacesCustomizationProfilesCreateRequest = SeamHttpRequest<WorkspacesCustomizationProfilesCreateResponse, 'customization_profile'>;
export interface WorkspacesCustomizationProfilesCreateOptions {
}
export type WorkspacesCustomizationProfilesGetParameters = RouteRequestBody<'/workspaces/customization_profiles/get'>;
/**
 * @deprecated Use WorkspacesCustomizationProfilesGetParameters instead.
 */
export type WorkspacesCustomizationProfilesGetParams = WorkspacesCustomizationProfilesGetParameters;
/**
 * @deprecated Use WorkspacesCustomizationProfilesGetRequest instead.
 */
export type WorkspacesCustomizationProfilesGetResponse = SetNonNullable<Required<RouteResponse<'/workspaces/customization_profiles/get'>>>;
export type WorkspacesCustomizationProfilesGetRequest = SeamHttpRequest<WorkspacesCustomizationProfilesGetResponse, 'customization_profile'>;
export interface WorkspacesCustomizationProfilesGetOptions {
}
export type WorkspacesCustomizationProfilesListParameters = RouteRequestBody<'/workspaces/customization_profiles/list'>;
/**
 * @deprecated Use WorkspacesCustomizationProfilesListParameters instead.
 */
export type WorkspacesCustomizationProfilesListParams = WorkspacesCustomizationProfilesListParameters;
/**
 * @deprecated Use WorkspacesCustomizationProfilesListRequest instead.
 */
export type WorkspacesCustomizationProfilesListResponse = SetNonNullable<Required<RouteResponse<'/workspaces/customization_profiles/list'>>>;
export type WorkspacesCustomizationProfilesListRequest = SeamHttpRequest<WorkspacesCustomizationProfilesListResponse, 'customization_profiles'>;
export interface WorkspacesCustomizationProfilesListOptions {
}
export type WorkspacesCustomizationProfilesUpdateParameters = RouteRequestBody<'/workspaces/customization_profiles/update'>;
/**
 * @deprecated Use WorkspacesCustomizationProfilesUpdateParameters instead.
 */
export type WorkspacesCustomizationProfilesUpdateBody = WorkspacesCustomizationProfilesUpdateParameters;
/**
 * @deprecated Use WorkspacesCustomizationProfilesUpdateRequest instead.
 */
export type WorkspacesCustomizationProfilesUpdateResponse = SetNonNullable<Required<RouteResponse<'/workspaces/customization_profiles/update'>>>;
export type WorkspacesCustomizationProfilesUpdateRequest = SeamHttpRequest<void, undefined>;
export interface WorkspacesCustomizationProfilesUpdateOptions {
}
export type WorkspacesCustomizationProfilesUploadImagesParameters = RouteRequestBody<'/workspaces/customization_profiles/upload_images'>;
/**
 * @deprecated Use WorkspacesCustomizationProfilesUploadImagesParameters instead.
 */
export type WorkspacesCustomizationProfilesUploadImagesBody = WorkspacesCustomizationProfilesUploadImagesParameters;
/**
 * @deprecated Use WorkspacesCustomizationProfilesUploadImagesRequest instead.
 */
export type WorkspacesCustomizationProfilesUploadImagesResponse = SetNonNullable<Required<RouteResponse<'/workspaces/customization_profiles/upload_images'>>>;
export type WorkspacesCustomizationProfilesUploadImagesRequest = SeamHttpRequest<void, undefined>;
export interface WorkspacesCustomizationProfilesUploadImagesOptions {
}
