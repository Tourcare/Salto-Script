import type { RouteRequestBody, RouteResponse } from '@seamapi/types/connect';
import { type Client } from '../../../../../lib/seam/connect/client.js';
import { type SeamHttpFromPublishableKeyOptions, type SeamHttpOptions, type SeamHttpOptionsWithApiKey, type SeamHttpOptionsWithClient, type SeamHttpOptionsWithClientSessionToken, type SeamHttpOptionsWithConsoleSessionToken, type SeamHttpOptionsWithPersonalAccessToken, type SeamHttpRequestOptions } from '../../../../../lib/seam/connect/options.js';
import { SeamHttpRequest } from '../../../../../lib/seam/connect/seam-http-request.js';
import { SeamPaginator } from '../../../../../lib/seam/connect/seam-paginator.js';
import type { SetNonNullable } from '../../../../../lib/types.js';
import { SeamHttpAccessCodesSimulate } from './simulate/index.js';
import { SeamHttpAccessCodesUnmanaged } from './unmanaged/index.js';
export declare class SeamHttpAccessCodes {
    client: Client;
    readonly defaults: Required<SeamHttpRequestOptions>;
    readonly ltsVersion = "1.0.0";
    static ltsVersion: string;
    constructor(apiKeyOrOptions?: string | SeamHttpOptions);
    static fromClient(client: SeamHttpOptionsWithClient['client'], options?: Omit<SeamHttpOptionsWithClient, 'client'>): SeamHttpAccessCodes;
    static fromApiKey(apiKey: SeamHttpOptionsWithApiKey['apiKey'], options?: Omit<SeamHttpOptionsWithApiKey, 'apiKey'>): SeamHttpAccessCodes;
    static fromClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken'], options?: Omit<SeamHttpOptionsWithClientSessionToken, 'clientSessionToken'>): SeamHttpAccessCodes;
    static fromPublishableKey(publishableKey: string, userIdentifierKey: string, options?: SeamHttpFromPublishableKeyOptions): Promise<SeamHttpAccessCodes>;
    static fromConsoleSessionToken(consoleSessionToken: SeamHttpOptionsWithConsoleSessionToken['consoleSessionToken'], workspaceId: SeamHttpOptionsWithConsoleSessionToken['workspaceId'], options?: Omit<SeamHttpOptionsWithConsoleSessionToken, 'consoleSessionToken' | 'workspaceId'>): SeamHttpAccessCodes;
    static fromPersonalAccessToken(personalAccessToken: SeamHttpOptionsWithPersonalAccessToken['personalAccessToken'], workspaceId: SeamHttpOptionsWithPersonalAccessToken['workspaceId'], options?: Omit<SeamHttpOptionsWithPersonalAccessToken, 'personalAccessToken' | 'workspaceId'>): SeamHttpAccessCodes;
    createPaginator<const TResponse, const TResponseKey extends keyof TResponse>(request: SeamHttpRequest<TResponse, TResponseKey>): SeamPaginator<TResponse, TResponseKey>;
    updateClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken']): Promise<void>;
    get simulate(): SeamHttpAccessCodesSimulate;
    get unmanaged(): SeamHttpAccessCodesUnmanaged;
    create(parameters?: AccessCodesCreateParameters, options?: AccessCodesCreateOptions): AccessCodesCreateRequest;
    createMultiple(parameters?: AccessCodesCreateMultipleParameters, options?: AccessCodesCreateMultipleOptions): AccessCodesCreateMultipleRequest;
    delete(parameters?: AccessCodesDeleteParameters, options?: AccessCodesDeleteOptions): AccessCodesDeleteRequest;
    generateCode(parameters?: AccessCodesGenerateCodeParameters, options?: AccessCodesGenerateCodeOptions): AccessCodesGenerateCodeRequest;
    get(parameters?: AccessCodesGetParameters, options?: AccessCodesGetOptions): AccessCodesGetRequest;
    list(parameters?: AccessCodesListParameters, options?: AccessCodesListOptions): AccessCodesListRequest;
    pullBackupAccessCode(parameters?: AccessCodesPullBackupAccessCodeParameters, options?: AccessCodesPullBackupAccessCodeOptions): AccessCodesPullBackupAccessCodeRequest;
    reportDeviceConstraints(parameters?: AccessCodesReportDeviceConstraintsParameters, options?: AccessCodesReportDeviceConstraintsOptions): AccessCodesReportDeviceConstraintsRequest;
    update(parameters?: AccessCodesUpdateParameters, options?: AccessCodesUpdateOptions): AccessCodesUpdateRequest;
    updateMultiple(parameters?: AccessCodesUpdateMultipleParameters, options?: AccessCodesUpdateMultipleOptions): AccessCodesUpdateMultipleRequest;
}
export type AccessCodesCreateParameters = RouteRequestBody<'/access_codes/create'>;
/**
 * @deprecated Use AccessCodesCreateParameters instead.
 */
export type AccessCodesCreateBody = AccessCodesCreateParameters;
/**
 * @deprecated Use AccessCodesCreateRequest instead.
 */
export type AccessCodesCreateResponse = SetNonNullable<Required<RouteResponse<'/access_codes/create'>>>;
export type AccessCodesCreateRequest = SeamHttpRequest<AccessCodesCreateResponse, 'access_code'>;
export interface AccessCodesCreateOptions {
}
export type AccessCodesCreateMultipleParameters = RouteRequestBody<'/access_codes/create_multiple'>;
/**
 * @deprecated Use AccessCodesCreateMultipleParameters instead.
 */
export type AccessCodesCreateMultipleBody = AccessCodesCreateMultipleParameters;
/**
 * @deprecated Use AccessCodesCreateMultipleRequest instead.
 */
export type AccessCodesCreateMultipleResponse = SetNonNullable<Required<RouteResponse<'/access_codes/create_multiple'>>>;
export type AccessCodesCreateMultipleRequest = SeamHttpRequest<AccessCodesCreateMultipleResponse, 'access_codes'>;
export interface AccessCodesCreateMultipleOptions {
}
export type AccessCodesDeleteParameters = RouteRequestBody<'/access_codes/delete'>;
/**
 * @deprecated Use AccessCodesDeleteParameters instead.
 */
export type AccessCodesDeleteParams = AccessCodesDeleteParameters;
/**
 * @deprecated Use AccessCodesDeleteRequest instead.
 */
export type AccessCodesDeleteResponse = SetNonNullable<Required<RouteResponse<'/access_codes/delete'>>>;
export type AccessCodesDeleteRequest = SeamHttpRequest<void, undefined>;
export interface AccessCodesDeleteOptions {
}
export type AccessCodesGenerateCodeParameters = RouteRequestBody<'/access_codes/generate_code'>;
/**
 * @deprecated Use AccessCodesGenerateCodeParameters instead.
 */
export type AccessCodesGenerateCodeParams = AccessCodesGenerateCodeParameters;
/**
 * @deprecated Use AccessCodesGenerateCodeRequest instead.
 */
export type AccessCodesGenerateCodeResponse = SetNonNullable<Required<RouteResponse<'/access_codes/generate_code'>>>;
export type AccessCodesGenerateCodeRequest = SeamHttpRequest<AccessCodesGenerateCodeResponse, 'generated_code'>;
export interface AccessCodesGenerateCodeOptions {
}
export type AccessCodesGetParameters = RouteRequestBody<'/access_codes/get'>;
/**
 * @deprecated Use AccessCodesGetParameters instead.
 */
export type AccessCodesGetParams = AccessCodesGetParameters;
/**
 * @deprecated Use AccessCodesGetRequest instead.
 */
export type AccessCodesGetResponse = SetNonNullable<Required<RouteResponse<'/access_codes/get'>>>;
export type AccessCodesGetRequest = SeamHttpRequest<AccessCodesGetResponse, 'access_code'>;
export interface AccessCodesGetOptions {
}
export type AccessCodesListParameters = RouteRequestBody<'/access_codes/list'>;
/**
 * @deprecated Use AccessCodesListParameters instead.
 */
export type AccessCodesListParams = AccessCodesListParameters;
/**
 * @deprecated Use AccessCodesListRequest instead.
 */
export type AccessCodesListResponse = SetNonNullable<Required<RouteResponse<'/access_codes/list'>>>;
export type AccessCodesListRequest = SeamHttpRequest<AccessCodesListResponse, 'access_codes'>;
export interface AccessCodesListOptions {
}
export type AccessCodesPullBackupAccessCodeParameters = RouteRequestBody<'/access_codes/pull_backup_access_code'>;
/**
 * @deprecated Use AccessCodesPullBackupAccessCodeParameters instead.
 */
export type AccessCodesPullBackupAccessCodeBody = AccessCodesPullBackupAccessCodeParameters;
/**
 * @deprecated Use AccessCodesPullBackupAccessCodeRequest instead.
 */
export type AccessCodesPullBackupAccessCodeResponse = SetNonNullable<Required<RouteResponse<'/access_codes/pull_backup_access_code'>>>;
export type AccessCodesPullBackupAccessCodeRequest = SeamHttpRequest<AccessCodesPullBackupAccessCodeResponse, 'access_code'>;
export interface AccessCodesPullBackupAccessCodeOptions {
}
export type AccessCodesReportDeviceConstraintsParameters = RouteRequestBody<'/access_codes/report_device_constraints'>;
/**
 * @deprecated Use AccessCodesReportDeviceConstraintsParameters instead.
 */
export type AccessCodesReportDeviceConstraintsBody = AccessCodesReportDeviceConstraintsParameters;
/**
 * @deprecated Use AccessCodesReportDeviceConstraintsRequest instead.
 */
export type AccessCodesReportDeviceConstraintsResponse = SetNonNullable<Required<RouteResponse<'/access_codes/report_device_constraints'>>>;
export type AccessCodesReportDeviceConstraintsRequest = SeamHttpRequest<void, undefined>;
export interface AccessCodesReportDeviceConstraintsOptions {
}
export type AccessCodesUpdateParameters = RouteRequestBody<'/access_codes/update'>;
/**
 * @deprecated Use AccessCodesUpdateParameters instead.
 */
export type AccessCodesUpdateBody = AccessCodesUpdateParameters;
/**
 * @deprecated Use AccessCodesUpdateRequest instead.
 */
export type AccessCodesUpdateResponse = SetNonNullable<Required<RouteResponse<'/access_codes/update'>>>;
export type AccessCodesUpdateRequest = SeamHttpRequest<void, undefined>;
export interface AccessCodesUpdateOptions {
}
export type AccessCodesUpdateMultipleParameters = RouteRequestBody<'/access_codes/update_multiple'>;
/**
 * @deprecated Use AccessCodesUpdateMultipleParameters instead.
 */
export type AccessCodesUpdateMultipleBody = AccessCodesUpdateMultipleParameters;
/**
 * @deprecated Use AccessCodesUpdateMultipleRequest instead.
 */
export type AccessCodesUpdateMultipleResponse = SetNonNullable<Required<RouteResponse<'/access_codes/update_multiple'>>>;
export type AccessCodesUpdateMultipleRequest = SeamHttpRequest<void, undefined>;
export interface AccessCodesUpdateMultipleOptions {
}
