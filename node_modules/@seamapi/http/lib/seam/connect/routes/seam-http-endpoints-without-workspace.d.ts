import { type Client } from '../../../../lib/seam/connect/client.js';
import { type SeamHttpRequestOptions, type SeamHttpWithoutWorkspaceOptions, type SeamHttpWithoutWorkspaceOptionsWithClient, type SeamHttpWithoutWorkspaceOptionsWithConsoleSessionToken, type SeamHttpWithoutWorkspaceOptionsWithPersonalAccessToken } from '../../../../lib/seam/connect/options.js';
import { type WorkspacesCreateOptions, type WorkspacesCreateParameters, type WorkspacesCreateRequest, type WorkspacesListOptions, type WorkspacesListParameters, type WorkspacesListRequest } from './workspaces/index.js';
export declare class SeamHttpEndpointsWithoutWorkspace {
    client: Client;
    readonly defaults: Required<SeamHttpRequestOptions>;
    readonly ltsVersion = "1.0.0";
    static ltsVersion: string;
    constructor(options?: SeamHttpWithoutWorkspaceOptions);
    static fromClient(client: SeamHttpWithoutWorkspaceOptionsWithClient['client'], options?: Omit<SeamHttpWithoutWorkspaceOptionsWithClient, 'client'>): SeamHttpEndpointsWithoutWorkspace;
    static fromConsoleSessionToken(consoleSessionToken: SeamHttpWithoutWorkspaceOptionsWithConsoleSessionToken['consoleSessionToken'], options?: Omit<SeamHttpWithoutWorkspaceOptionsWithConsoleSessionToken, 'consoleSessionToken'>): SeamHttpEndpointsWithoutWorkspace;
    static fromPersonalAccessToken(personalAccessToken: SeamHttpWithoutWorkspaceOptionsWithPersonalAccessToken['personalAccessToken'], options?: Omit<SeamHttpWithoutWorkspaceOptionsWithPersonalAccessToken, 'personalAccessToken'>): SeamHttpEndpointsWithoutWorkspace;
    get '/workspaces/create'(): (parameters?: WorkspacesCreateParameters, options?: WorkspacesCreateOptions) => WorkspacesCreateRequest;
    get '/workspaces/list'(): (parameters?: WorkspacesListParameters, options?: WorkspacesListOptions) => WorkspacesListRequest;
}
export type SeamHttpEndpointWithoutWorkspaceQueryPaths = '/workspaces/list';
export type SeamHttpEndpointWithoutWorkspaceMutationPaths = '/workspaces/create';
