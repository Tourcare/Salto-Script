import type { RouteRequestBody, RouteRequestParams, RouteResponse } from '@seamapi/types/connect';
import { type Client } from '../../../../../lib/seam/connect/client.js';
import { type SeamHttpFromPublishableKeyOptions, type SeamHttpOptions, type SeamHttpOptionsWithApiKey, type SeamHttpOptionsWithClient, type SeamHttpOptionsWithClientSessionToken, type SeamHttpOptionsWithConsoleSessionToken, type SeamHttpOptionsWithPersonalAccessToken, type SeamHttpRequestOptions } from '../../../../../lib/seam/connect/options.js';
import { SeamHttpRequest } from '../../../../../lib/seam/connect/seam-http-request.js';
import { SeamPaginator } from '../../../../../lib/seam/connect/seam-paginator.js';
import type { SetNonNullable } from '../../../../../lib/types.js';
import { SeamHttpUserIdentitiesEnrollmentAutomations } from './enrollment-automations/index.js';
import { SeamHttpUserIdentitiesUnmanaged } from './unmanaged/index.js';
export declare class SeamHttpUserIdentities {
    client: Client;
    readonly defaults: Required<SeamHttpRequestOptions>;
    readonly ltsVersion = "1.0.0";
    static ltsVersion: string;
    constructor(apiKeyOrOptions?: string | SeamHttpOptions);
    static fromClient(client: SeamHttpOptionsWithClient['client'], options?: Omit<SeamHttpOptionsWithClient, 'client'>): SeamHttpUserIdentities;
    static fromApiKey(apiKey: SeamHttpOptionsWithApiKey['apiKey'], options?: Omit<SeamHttpOptionsWithApiKey, 'apiKey'>): SeamHttpUserIdentities;
    static fromClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken'], options?: Omit<SeamHttpOptionsWithClientSessionToken, 'clientSessionToken'>): SeamHttpUserIdentities;
    static fromPublishableKey(publishableKey: string, userIdentifierKey: string, options?: SeamHttpFromPublishableKeyOptions): Promise<SeamHttpUserIdentities>;
    static fromConsoleSessionToken(consoleSessionToken: SeamHttpOptionsWithConsoleSessionToken['consoleSessionToken'], workspaceId: SeamHttpOptionsWithConsoleSessionToken['workspaceId'], options?: Omit<SeamHttpOptionsWithConsoleSessionToken, 'consoleSessionToken' | 'workspaceId'>): SeamHttpUserIdentities;
    static fromPersonalAccessToken(personalAccessToken: SeamHttpOptionsWithPersonalAccessToken['personalAccessToken'], workspaceId: SeamHttpOptionsWithPersonalAccessToken['workspaceId'], options?: Omit<SeamHttpOptionsWithPersonalAccessToken, 'personalAccessToken' | 'workspaceId'>): SeamHttpUserIdentities;
    createPaginator<const TResponse, const TResponseKey extends keyof TResponse>(request: SeamHttpRequest<TResponse, TResponseKey>): SeamPaginator<TResponse, TResponseKey>;
    updateClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken']): Promise<void>;
    get enrollmentAutomations(): SeamHttpUserIdentitiesEnrollmentAutomations;
    get unmanaged(): SeamHttpUserIdentitiesUnmanaged;
    addAcsUser(parameters?: UserIdentitiesAddAcsUserParameters, options?: UserIdentitiesAddAcsUserOptions): UserIdentitiesAddAcsUserRequest;
    create(parameters?: UserIdentitiesCreateParameters, options?: UserIdentitiesCreateOptions): UserIdentitiesCreateRequest;
    delete(parameters?: UserIdentitiesDeleteParameters, options?: UserIdentitiesDeleteOptions): UserIdentitiesDeleteRequest;
    generateInstantKey(parameters?: UserIdentitiesGenerateInstantKeyParameters, options?: UserIdentitiesGenerateInstantKeyOptions): UserIdentitiesGenerateInstantKeyRequest;
    get(parameters?: UserIdentitiesGetParameters, options?: UserIdentitiesGetOptions): UserIdentitiesGetRequest;
    grantAccessToDevice(parameters?: UserIdentitiesGrantAccessToDeviceParameters, options?: UserIdentitiesGrantAccessToDeviceOptions): UserIdentitiesGrantAccessToDeviceRequest;
    list(parameters?: UserIdentitiesListParameters, options?: UserIdentitiesListOptions): UserIdentitiesListRequest;
    listAccessibleDevices(parameters?: UserIdentitiesListAccessibleDevicesParameters, options?: UserIdentitiesListAccessibleDevicesOptions): UserIdentitiesListAccessibleDevicesRequest;
    listAcsSystems(parameters?: UserIdentitiesListAcsSystemsParameters, options?: UserIdentitiesListAcsSystemsOptions): UserIdentitiesListAcsSystemsRequest;
    listAcsUsers(parameters?: UserIdentitiesListAcsUsersParameters, options?: UserIdentitiesListAcsUsersOptions): UserIdentitiesListAcsUsersRequest;
    removeAcsUser(parameters?: UserIdentitiesRemoveAcsUserParameters, options?: UserIdentitiesRemoveAcsUserOptions): UserIdentitiesRemoveAcsUserRequest;
    revokeAccessToDevice(parameters?: UserIdentitiesRevokeAccessToDeviceParameters, options?: UserIdentitiesRevokeAccessToDeviceOptions): UserIdentitiesRevokeAccessToDeviceRequest;
    update(parameters?: UserIdentitiesUpdateParameters, options?: UserIdentitiesUpdateOptions): UserIdentitiesUpdateRequest;
}
export type UserIdentitiesAddAcsUserParameters = RouteRequestBody<'/user_identities/add_acs_user'>;
/**
 * @deprecated Use UserIdentitiesAddAcsUserParameters instead.
 */
export type UserIdentitiesAddAcsUserBody = UserIdentitiesAddAcsUserParameters;
/**
 * @deprecated Use UserIdentitiesAddAcsUserRequest instead.
 */
export type UserIdentitiesAddAcsUserResponse = SetNonNullable<Required<RouteResponse<'/user_identities/add_acs_user'>>>;
export type UserIdentitiesAddAcsUserRequest = SeamHttpRequest<void, undefined>;
export interface UserIdentitiesAddAcsUserOptions {
}
export type UserIdentitiesCreateParameters = RouteRequestBody<'/user_identities/create'>;
/**
 * @deprecated Use UserIdentitiesCreateParameters instead.
 */
export type UserIdentitiesCreateBody = UserIdentitiesCreateParameters;
/**
 * @deprecated Use UserIdentitiesCreateRequest instead.
 */
export type UserIdentitiesCreateResponse = SetNonNullable<Required<RouteResponse<'/user_identities/create'>>>;
export type UserIdentitiesCreateRequest = SeamHttpRequest<UserIdentitiesCreateResponse, 'user_identity'>;
export interface UserIdentitiesCreateOptions {
}
export type UserIdentitiesDeleteParameters = RouteRequestBody<'/user_identities/delete'>;
/**
 * @deprecated Use UserIdentitiesDeleteParameters instead.
 */
export type UserIdentitiesDeleteParams = UserIdentitiesDeleteParameters;
/**
 * @deprecated Use UserIdentitiesDeleteRequest instead.
 */
export type UserIdentitiesDeleteResponse = SetNonNullable<Required<RouteResponse<'/user_identities/delete'>>>;
export type UserIdentitiesDeleteRequest = SeamHttpRequest<void, undefined>;
export interface UserIdentitiesDeleteOptions {
}
export type UserIdentitiesGenerateInstantKeyParameters = RouteRequestBody<'/user_identities/generate_instant_key'>;
/**
 * @deprecated Use UserIdentitiesGenerateInstantKeyParameters instead.
 */
export type UserIdentitiesGenerateInstantKeyBody = UserIdentitiesGenerateInstantKeyParameters;
/**
 * @deprecated Use UserIdentitiesGenerateInstantKeyRequest instead.
 */
export type UserIdentitiesGenerateInstantKeyResponse = SetNonNullable<Required<RouteResponse<'/user_identities/generate_instant_key'>>>;
export type UserIdentitiesGenerateInstantKeyRequest = SeamHttpRequest<UserIdentitiesGenerateInstantKeyResponse, 'instant_key'>;
export interface UserIdentitiesGenerateInstantKeyOptions {
}
export type UserIdentitiesGetParameters = RouteRequestParams<'/user_identities/get'>;
/**
 * @deprecated Use UserIdentitiesGetParameters instead.
 */
export type UserIdentitiesGetParams = UserIdentitiesGetParameters;
/**
 * @deprecated Use UserIdentitiesGetRequest instead.
 */
export type UserIdentitiesGetResponse = SetNonNullable<Required<RouteResponse<'/user_identities/get'>>>;
export type UserIdentitiesGetRequest = SeamHttpRequest<UserIdentitiesGetResponse, 'user_identity'>;
export interface UserIdentitiesGetOptions {
}
export type UserIdentitiesGrantAccessToDeviceParameters = RouteRequestBody<'/user_identities/grant_access_to_device'>;
/**
 * @deprecated Use UserIdentitiesGrantAccessToDeviceParameters instead.
 */
export type UserIdentitiesGrantAccessToDeviceBody = UserIdentitiesGrantAccessToDeviceParameters;
/**
 * @deprecated Use UserIdentitiesGrantAccessToDeviceRequest instead.
 */
export type UserIdentitiesGrantAccessToDeviceResponse = SetNonNullable<Required<RouteResponse<'/user_identities/grant_access_to_device'>>>;
export type UserIdentitiesGrantAccessToDeviceRequest = SeamHttpRequest<void, undefined>;
export interface UserIdentitiesGrantAccessToDeviceOptions {
}
export type UserIdentitiesListParameters = RouteRequestBody<'/user_identities/list'>;
/**
 * @deprecated Use UserIdentitiesListParameters instead.
 */
export type UserIdentitiesListParams = UserIdentitiesListParameters;
/**
 * @deprecated Use UserIdentitiesListRequest instead.
 */
export type UserIdentitiesListResponse = SetNonNullable<Required<RouteResponse<'/user_identities/list'>>>;
export type UserIdentitiesListRequest = SeamHttpRequest<UserIdentitiesListResponse, 'user_identities'>;
export interface UserIdentitiesListOptions {
}
export type UserIdentitiesListAccessibleDevicesParameters = RouteRequestBody<'/user_identities/list_accessible_devices'>;
/**
 * @deprecated Use UserIdentitiesListAccessibleDevicesParameters instead.
 */
export type UserIdentitiesListAccessibleDevicesParams = UserIdentitiesListAccessibleDevicesParameters;
/**
 * @deprecated Use UserIdentitiesListAccessibleDevicesRequest instead.
 */
export type UserIdentitiesListAccessibleDevicesResponse = SetNonNullable<Required<RouteResponse<'/user_identities/list_accessible_devices'>>>;
export type UserIdentitiesListAccessibleDevicesRequest = SeamHttpRequest<UserIdentitiesListAccessibleDevicesResponse, 'devices'>;
export interface UserIdentitiesListAccessibleDevicesOptions {
}
export type UserIdentitiesListAcsSystemsParameters = RouteRequestBody<'/user_identities/list_acs_systems'>;
/**
 * @deprecated Use UserIdentitiesListAcsSystemsParameters instead.
 */
export type UserIdentitiesListAcsSystemsParams = UserIdentitiesListAcsSystemsParameters;
/**
 * @deprecated Use UserIdentitiesListAcsSystemsRequest instead.
 */
export type UserIdentitiesListAcsSystemsResponse = SetNonNullable<Required<RouteResponse<'/user_identities/list_acs_systems'>>>;
export type UserIdentitiesListAcsSystemsRequest = SeamHttpRequest<UserIdentitiesListAcsSystemsResponse, 'acs_systems'>;
export interface UserIdentitiesListAcsSystemsOptions {
}
export type UserIdentitiesListAcsUsersParameters = RouteRequestBody<'/user_identities/list_acs_users'>;
/**
 * @deprecated Use UserIdentitiesListAcsUsersParameters instead.
 */
export type UserIdentitiesListAcsUsersParams = UserIdentitiesListAcsUsersParameters;
/**
 * @deprecated Use UserIdentitiesListAcsUsersRequest instead.
 */
export type UserIdentitiesListAcsUsersResponse = SetNonNullable<Required<RouteResponse<'/user_identities/list_acs_users'>>>;
export type UserIdentitiesListAcsUsersRequest = SeamHttpRequest<UserIdentitiesListAcsUsersResponse, 'acs_users'>;
export interface UserIdentitiesListAcsUsersOptions {
}
export type UserIdentitiesRemoveAcsUserParameters = RouteRequestBody<'/user_identities/remove_acs_user'>;
/**
 * @deprecated Use UserIdentitiesRemoveAcsUserParameters instead.
 */
export type UserIdentitiesRemoveAcsUserParams = UserIdentitiesRemoveAcsUserParameters;
/**
 * @deprecated Use UserIdentitiesRemoveAcsUserRequest instead.
 */
export type UserIdentitiesRemoveAcsUserResponse = SetNonNullable<Required<RouteResponse<'/user_identities/remove_acs_user'>>>;
export type UserIdentitiesRemoveAcsUserRequest = SeamHttpRequest<void, undefined>;
export interface UserIdentitiesRemoveAcsUserOptions {
}
export type UserIdentitiesRevokeAccessToDeviceParameters = RouteRequestBody<'/user_identities/revoke_access_to_device'>;
/**
 * @deprecated Use UserIdentitiesRevokeAccessToDeviceParameters instead.
 */
export type UserIdentitiesRevokeAccessToDeviceParams = UserIdentitiesRevokeAccessToDeviceParameters;
/**
 * @deprecated Use UserIdentitiesRevokeAccessToDeviceRequest instead.
 */
export type UserIdentitiesRevokeAccessToDeviceResponse = SetNonNullable<Required<RouteResponse<'/user_identities/revoke_access_to_device'>>>;
export type UserIdentitiesRevokeAccessToDeviceRequest = SeamHttpRequest<void, undefined>;
export interface UserIdentitiesRevokeAccessToDeviceOptions {
}
export type UserIdentitiesUpdateParameters = RouteRequestBody<'/user_identities/update'>;
/**
 * @deprecated Use UserIdentitiesUpdateParameters instead.
 */
export type UserIdentitiesUpdateBody = UserIdentitiesUpdateParameters;
/**
 * @deprecated Use UserIdentitiesUpdateRequest instead.
 */
export type UserIdentitiesUpdateResponse = SetNonNullable<Required<RouteResponse<'/user_identities/update'>>>;
export type UserIdentitiesUpdateRequest = SeamHttpRequest<void, undefined>;
export interface UserIdentitiesUpdateOptions {
}
