import type { RouteRequestBody, RouteRequestParams, RouteResponse } from '@seamapi/types/connect';
import { type Client } from '../../../../../lib/seam/connect/client.js';
import { type SeamHttpFromPublishableKeyOptions, type SeamHttpOptions, type SeamHttpOptionsWithApiKey, type SeamHttpOptionsWithClient, type SeamHttpOptionsWithClientSessionToken, type SeamHttpOptionsWithConsoleSessionToken, type SeamHttpOptionsWithPersonalAccessToken, type SeamHttpRequestOptions } from '../../../../../lib/seam/connect/options.js';
import { SeamHttpRequest } from '../../../../../lib/seam/connect/seam-http-request.js';
import { SeamPaginator } from '../../../../../lib/seam/connect/seam-paginator.js';
import type { SetNonNullable } from '../../../../../lib/types.js';
import { SeamHttpAccessGrantsUnmanaged } from './unmanaged/index.js';
export declare class SeamHttpAccessGrants {
    client: Client;
    readonly defaults: Required<SeamHttpRequestOptions>;
    readonly ltsVersion = "1.0.0";
    static ltsVersion: string;
    constructor(apiKeyOrOptions?: string | SeamHttpOptions);
    static fromClient(client: SeamHttpOptionsWithClient['client'], options?: Omit<SeamHttpOptionsWithClient, 'client'>): SeamHttpAccessGrants;
    static fromApiKey(apiKey: SeamHttpOptionsWithApiKey['apiKey'], options?: Omit<SeamHttpOptionsWithApiKey, 'apiKey'>): SeamHttpAccessGrants;
    static fromClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken'], options?: Omit<SeamHttpOptionsWithClientSessionToken, 'clientSessionToken'>): SeamHttpAccessGrants;
    static fromPublishableKey(publishableKey: string, userIdentifierKey: string, options?: SeamHttpFromPublishableKeyOptions): Promise<SeamHttpAccessGrants>;
    static fromConsoleSessionToken(consoleSessionToken: SeamHttpOptionsWithConsoleSessionToken['consoleSessionToken'], workspaceId: SeamHttpOptionsWithConsoleSessionToken['workspaceId'], options?: Omit<SeamHttpOptionsWithConsoleSessionToken, 'consoleSessionToken' | 'workspaceId'>): SeamHttpAccessGrants;
    static fromPersonalAccessToken(personalAccessToken: SeamHttpOptionsWithPersonalAccessToken['personalAccessToken'], workspaceId: SeamHttpOptionsWithPersonalAccessToken['workspaceId'], options?: Omit<SeamHttpOptionsWithPersonalAccessToken, 'personalAccessToken' | 'workspaceId'>): SeamHttpAccessGrants;
    createPaginator<const TResponse, const TResponseKey extends keyof TResponse>(request: SeamHttpRequest<TResponse, TResponseKey>): SeamPaginator<TResponse, TResponseKey>;
    updateClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken']): Promise<void>;
    get unmanaged(): SeamHttpAccessGrantsUnmanaged;
    create(parameters?: AccessGrantsCreateParameters, options?: AccessGrantsCreateOptions): AccessGrantsCreateRequest;
    delete(parameters?: AccessGrantsDeleteParameters, options?: AccessGrantsDeleteOptions): AccessGrantsDeleteRequest;
    get(parameters?: AccessGrantsGetParameters, options?: AccessGrantsGetOptions): AccessGrantsGetRequest;
    getRelated(parameters?: AccessGrantsGetRelatedParameters, options?: AccessGrantsGetRelatedOptions): AccessGrantsGetRelatedRequest;
    list(parameters?: AccessGrantsListParameters, options?: AccessGrantsListOptions): AccessGrantsListRequest;
    update(parameters?: AccessGrantsUpdateParameters, options?: AccessGrantsUpdateOptions): AccessGrantsUpdateRequest;
}
export type AccessGrantsCreateParameters = RouteRequestBody<'/access_grants/create'>;
/**
 * @deprecated Use AccessGrantsCreateParameters instead.
 */
export type AccessGrantsCreateBody = AccessGrantsCreateParameters;
/**
 * @deprecated Use AccessGrantsCreateRequest instead.
 */
export type AccessGrantsCreateResponse = SetNonNullable<Required<RouteResponse<'/access_grants/create'>>>;
export type AccessGrantsCreateRequest = SeamHttpRequest<AccessGrantsCreateResponse, 'access_grant'>;
export interface AccessGrantsCreateOptions {
}
export type AccessGrantsDeleteParameters = RouteRequestBody<'/access_grants/delete'>;
/**
 * @deprecated Use AccessGrantsDeleteParameters instead.
 */
export type AccessGrantsDeleteParams = AccessGrantsDeleteParameters;
/**
 * @deprecated Use AccessGrantsDeleteRequest instead.
 */
export type AccessGrantsDeleteResponse = SetNonNullable<Required<RouteResponse<'/access_grants/delete'>>>;
export type AccessGrantsDeleteRequest = SeamHttpRequest<void, undefined>;
export interface AccessGrantsDeleteOptions {
}
export type AccessGrantsGetParameters = RouteRequestParams<'/access_grants/get'>;
/**
 * @deprecated Use AccessGrantsGetParameters instead.
 */
export type AccessGrantsGetParams = AccessGrantsGetParameters;
/**
 * @deprecated Use AccessGrantsGetRequest instead.
 */
export type AccessGrantsGetResponse = SetNonNullable<Required<RouteResponse<'/access_grants/get'>>>;
export type AccessGrantsGetRequest = SeamHttpRequest<AccessGrantsGetResponse, 'access_grant'>;
export interface AccessGrantsGetOptions {
}
export type AccessGrantsGetRelatedParameters = RouteRequestBody<'/access_grants/get_related'>;
/**
 * @deprecated Use AccessGrantsGetRelatedParameters instead.
 */
export type AccessGrantsGetRelatedParams = AccessGrantsGetRelatedParameters;
/**
 * @deprecated Use AccessGrantsGetRelatedRequest instead.
 */
export type AccessGrantsGetRelatedResponse = SetNonNullable<Required<RouteResponse<'/access_grants/get_related'>>>;
export type AccessGrantsGetRelatedRequest = SeamHttpRequest<AccessGrantsGetRelatedResponse, 'batch'>;
export interface AccessGrantsGetRelatedOptions {
}
export type AccessGrantsListParameters = RouteRequestBody<'/access_grants/list'>;
/**
 * @deprecated Use AccessGrantsListParameters instead.
 */
export type AccessGrantsListParams = AccessGrantsListParameters;
/**
 * @deprecated Use AccessGrantsListRequest instead.
 */
export type AccessGrantsListResponse = SetNonNullable<Required<RouteResponse<'/access_grants/list'>>>;
export type AccessGrantsListRequest = SeamHttpRequest<AccessGrantsListResponse, 'access_grants'>;
export interface AccessGrantsListOptions {
}
export type AccessGrantsUpdateParameters = RouteRequestBody<'/access_grants/update'>;
/**
 * @deprecated Use AccessGrantsUpdateParameters instead.
 */
export type AccessGrantsUpdateBody = AccessGrantsUpdateParameters;
/**
 * @deprecated Use AccessGrantsUpdateRequest instead.
 */
export type AccessGrantsUpdateResponse = SetNonNullable<Required<RouteResponse<'/access_grants/update'>>>;
export type AccessGrantsUpdateRequest = SeamHttpRequest<void, undefined>;
export interface AccessGrantsUpdateOptions {
}
