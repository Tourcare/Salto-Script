{"version":3,"sources":["../src/lib/seam-webhook.ts"],"names":["Webhook"],"mappings":";;;;;AAGO,IAAM,cAAN,MAAkB;AAAA,EACd,QAAA;AAAA,EAET,YAAY,MAAA,EAAgB;AAC1B,IAAA,IAAA,CAAK,QAAA,GAAW,IAAIA,YAAA,CAAQ,MAAM,CAAA;AAAA,EACpC;AAAA,EAEA,MAAA,CAAO,SAAiB,OAAA,EAA4C;AAClE,IAAA,MAAM,oBAAoB,MAAA,CAAO,WAAA;AAAA,MAC/B,MAAA,CAAO,OAAA,CAAQ,OAAO,CAAA,CAAE,IAAI,CAAC,CAAC,GAAA,EAAK,KAAK,MAAM,CAAC,GAAA,CAAI,WAAA,EAAY,EAAG,KAAK,CAAC;AAAA,KAC1E;AAEA,IAAA,OAAO,IAAA,CAAK,QAAA,CAAS,MAAA,CAAO,OAAA,EAAS,iBAAiB,CAAA;AAAA,EACxD;AACF","file":"index.cjs","sourcesContent":["import type { SeamEvent } from '@seamapi/types/connect'\nimport { Webhook } from 'svix'\n\nexport class SeamWebhook {\n  readonly #webhook: Webhook\n\n  constructor(secret: string) {\n    this.#webhook = new Webhook(secret)\n  }\n\n  verify(payload: string, headers: Record<string, string>): SeamEvent {\n    const normalizedHeaders = Object.fromEntries(\n      Object.entries(headers).map(([key, value]) => [key.toLowerCase(), value]),\n    )\n\n    return this.#webhook.verify(payload, normalizedHeaders) as SeamEvent\n  }\n}\n"]}