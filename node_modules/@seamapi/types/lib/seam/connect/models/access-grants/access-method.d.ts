import { z } from 'zod';
declare const _access_method_warning_map: z.ZodObject<{
    being_deleted: z.ZodNullable<z.ZodOptional<z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"being_deleted">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }, {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }>>>;
}, "strip", z.ZodTypeAny, {
    being_deleted?: {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    } | null | undefined;
}, {
    being_deleted?: {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    } | null | undefined;
}>;
export type AccessMethodWarningMap = z.infer<typeof _access_method_warning_map>;
export declare const access_method: z.ZodObject<{
    workspace_id: z.ZodString;
    access_method_id: z.ZodString;
    display_name: z.ZodString;
    mode: z.ZodEnum<["code", "card", "mobile_key"]>;
    created_at: z.ZodString;
    issued_at: z.ZodNullable<z.ZodString>;
    is_issued: z.ZodBoolean;
    instant_key_url: z.ZodOptional<z.ZodString>;
    client_session_token: z.ZodOptional<z.ZodString>;
    is_encoding_required: z.ZodOptional<z.ZodBoolean>;
    code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    warnings: z.ZodArray<z.ZodDiscriminatedUnion<"warning_code", [z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"being_deleted">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }, {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }>]>, "many">;
    customization_profile_id: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    display_name: string;
    workspace_id: string;
    created_at: string;
    warnings: {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }[];
    mode: "code" | "card" | "mobile_key";
    access_method_id: string;
    issued_at: string | null;
    is_issued: boolean;
    code?: string | null | undefined;
    client_session_token?: string | undefined;
    instant_key_url?: string | undefined;
    customization_profile_id?: string | undefined;
    is_encoding_required?: boolean | undefined;
}, {
    display_name: string;
    workspace_id: string;
    created_at: string;
    warnings: {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }[];
    mode: "code" | "card" | "mobile_key";
    access_method_id: string;
    issued_at: string | null;
    is_issued: boolean;
    code?: string | null | undefined;
    client_session_token?: string | undefined;
    instant_key_url?: string | undefined;
    customization_profile_id?: string | undefined;
    is_encoding_required?: boolean | undefined;
}>;
export type AccessMethod = z.infer<typeof access_method>;
export declare const unmanaged_access_method: z.ZodObject<Omit<{
    workspace_id: z.ZodString;
    access_method_id: z.ZodString;
    display_name: z.ZodString;
    mode: z.ZodEnum<["code", "card", "mobile_key"]>;
    created_at: z.ZodString;
    issued_at: z.ZodNullable<z.ZodString>;
    is_issued: z.ZodBoolean;
    instant_key_url: z.ZodOptional<z.ZodString>;
    client_session_token: z.ZodOptional<z.ZodString>;
    is_encoding_required: z.ZodOptional<z.ZodBoolean>;
    code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    warnings: z.ZodArray<z.ZodDiscriminatedUnion<"warning_code", [z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"being_deleted">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }, {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }>]>, "many">;
    customization_profile_id: z.ZodOptional<z.ZodString>;
}, "client_session_token" | "instant_key_url" | "customization_profile_id">, "strip", z.ZodTypeAny, {
    display_name: string;
    workspace_id: string;
    created_at: string;
    warnings: {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }[];
    mode: "code" | "card" | "mobile_key";
    access_method_id: string;
    issued_at: string | null;
    is_issued: boolean;
    code?: string | null | undefined;
    is_encoding_required?: boolean | undefined;
}, {
    display_name: string;
    workspace_id: string;
    created_at: string;
    warnings: {
        message: string;
        created_at: string;
        warning_code: "being_deleted";
    }[];
    mode: "code" | "card" | "mobile_key";
    access_method_id: string;
    issued_at: string | null;
    is_issued: boolean;
    code?: string | null | undefined;
    is_encoding_required?: boolean | undefined;
}>;
export type UnmanagedAccessMethod = z.infer<typeof unmanaged_access_method>;
export {};
