import { z } from 'zod';
export declare const account_disconnected: z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
    is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
    is_bridge_error: z.ZodOptional<z.ZodBoolean>;
} & {
    error_code: z.ZodLiteral<"account_disconnected">;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    error_code: "account_disconnected";
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}, {
    message: string;
    created_at: string;
    error_code: "account_disconnected";
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}>;
export declare const bridge_disconnected: z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
    is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
    is_bridge_error: z.ZodOptional<z.ZodBoolean>;
} & {
    error_code: z.ZodLiteral<"bridge_disconnected">;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    error_code: "bridge_disconnected";
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}, {
    message: string;
    created_at: string;
    error_code: "bridge_disconnected";
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}>;
export declare const salto_ks_subscription_limit_exceeded: z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
    is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
    is_bridge_error: z.ZodOptional<z.ZodBoolean>;
} & {
    error_code: z.ZodLiteral<"salto_ks_subscription_limit_exceeded">;
    salto_ks_metadata: z.ZodObject<{
        sites: z.ZodArray<z.ZodObject<{
            site_id: z.ZodString;
            site_name: z.ZodString;
            subscribed_site_user_count: z.ZodNumber;
            site_user_subscription_limit: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }, {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    }, {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    }>;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    error_code: "salto_ks_subscription_limit_exceeded";
    salto_ks_metadata: {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    };
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}, {
    message: string;
    created_at: string;
    error_code: "salto_ks_subscription_limit_exceeded";
    salto_ks_metadata: {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    };
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}>;
export declare const connected_account_error: z.ZodDiscriminatedUnion<"error_code", [z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
    is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
    is_bridge_error: z.ZodOptional<z.ZodBoolean>;
} & {
    error_code: z.ZodLiteral<"account_disconnected">;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    error_code: "account_disconnected";
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}, {
    message: string;
    created_at: string;
    error_code: "account_disconnected";
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}>, z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
    is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
    is_bridge_error: z.ZodOptional<z.ZodBoolean>;
} & {
    error_code: z.ZodLiteral<"bridge_disconnected">;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    error_code: "bridge_disconnected";
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}, {
    message: string;
    created_at: string;
    error_code: "bridge_disconnected";
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}>, z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
    is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
    is_bridge_error: z.ZodOptional<z.ZodBoolean>;
} & {
    error_code: z.ZodLiteral<"salto_ks_subscription_limit_exceeded">;
    salto_ks_metadata: z.ZodObject<{
        sites: z.ZodArray<z.ZodObject<{
            site_id: z.ZodString;
            site_name: z.ZodString;
            subscribed_site_user_count: z.ZodNumber;
            site_user_subscription_limit: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }, {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    }, {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    }>;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    error_code: "salto_ks_subscription_limit_exceeded";
    salto_ks_metadata: {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    };
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}, {
    message: string;
    created_at: string;
    error_code: "salto_ks_subscription_limit_exceeded";
    salto_ks_metadata: {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    };
    is_connected_account_error?: boolean | undefined;
    is_bridge_error?: boolean | undefined;
}>]>;
export type ConnectedAccountError = z.infer<typeof connected_account_error>;
export type ConnectedAccountWarning = z.infer<typeof connected_account_warning>;
declare const _connected_account_error_map: z.ZodObject<{
    account_disconnected: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"account_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }>>>;
    bridge_disconnected: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"bridge_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }>>>;
    salto_ks_subscription_limit_exceeded: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"salto_ks_subscription_limit_exceeded">;
        salto_ks_metadata: z.ZodObject<{
            sites: z.ZodArray<z.ZodObject<{
                site_id: z.ZodString;
                site_name: z.ZodString;
                subscribed_site_user_count: z.ZodNumber;
                site_user_subscription_limit: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    account_disconnected?: {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | null | undefined;
    bridge_disconnected?: {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | null | undefined;
    salto_ks_subscription_limit_exceeded?: {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | null | undefined;
}, {
    account_disconnected?: {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | null | undefined;
    bridge_disconnected?: {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | null | undefined;
    salto_ks_subscription_limit_exceeded?: {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | null | undefined;
}>;
export type ConnectedAccountErrorMap = z.infer<typeof _connected_account_error_map>;
export declare const unknown_issue_with_connected_account: z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
} & {
    warning_code: z.ZodLiteral<"unknown_issue_with_connected_account">;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    warning_code: "unknown_issue_with_connected_account";
}, {
    message: string;
    created_at: string;
    warning_code: "unknown_issue_with_connected_account";
}>;
declare const connected_account_warning: z.ZodDiscriminatedUnion<"warning_code", [z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
} & {
    warning_code: z.ZodLiteral<"scheduled_maintenance_window">;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    warning_code: "scheduled_maintenance_window";
}, {
    message: string;
    created_at: string;
    warning_code: "scheduled_maintenance_window";
}>, z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
} & {
    warning_code: z.ZodLiteral<"unknown_issue_with_connected_account">;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    warning_code: "unknown_issue_with_connected_account";
}, {
    message: string;
    created_at: string;
    warning_code: "unknown_issue_with_connected_account";
}>, z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
} & {
    warning_code: z.ZodLiteral<"salto_ks_subscription_limit_almost_reached">;
    salto_ks_metadata: z.ZodObject<{
        sites: z.ZodArray<z.ZodObject<{
            site_id: z.ZodString;
            site_name: z.ZodString;
            site_user_subscription_limit: z.ZodNumber;
            subscribed_site_user_count: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }, {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    }, {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    }>;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    salto_ks_metadata: {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    };
    warning_code: "salto_ks_subscription_limit_almost_reached";
}, {
    message: string;
    created_at: string;
    salto_ks_metadata: {
        sites: {
            site_id: string;
            site_name: string;
            subscribed_site_user_count: number;
            site_user_subscription_limit: number;
        }[];
    };
    warning_code: "salto_ks_subscription_limit_almost_reached";
}>, z.ZodObject<{
    created_at: z.ZodString;
    message: z.ZodString;
} & {
    warning_code: z.ZodLiteral<"account_reauthorization_requested">;
}, "strip", z.ZodTypeAny, {
    message: string;
    created_at: string;
    warning_code: "account_reauthorization_requested";
}, {
    message: string;
    created_at: string;
    warning_code: "account_reauthorization_requested";
}>]>;
declare const _connected_account_warning_map: z.ZodObject<{
    scheduled_maintenance_window: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"scheduled_maintenance_window">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    }, {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    }>>>;
    unknown_issue_with_connected_account: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"unknown_issue_with_connected_account">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_connected_account";
    }, {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_connected_account";
    }>>>;
    salto_ks_subscription_limit_almost_reached: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"salto_ks_subscription_limit_almost_reached">;
        salto_ks_metadata: z.ZodObject<{
            sites: z.ZodArray<z.ZodObject<{
                site_id: z.ZodString;
                site_name: z.ZodString;
                site_user_subscription_limit: z.ZodNumber;
                subscribed_site_user_count: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        warning_code: "salto_ks_subscription_limit_almost_reached";
    }, {
        message: string;
        created_at: string;
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        warning_code: "salto_ks_subscription_limit_almost_reached";
    }>>>;
    account_reauthorization_requested: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"account_reauthorization_requested">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "account_reauthorization_requested";
    }, {
        message: string;
        created_at: string;
        warning_code: "account_reauthorization_requested";
    }>>>;
}, "strip", z.ZodTypeAny, {
    scheduled_maintenance_window?: {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    } | null | undefined;
    unknown_issue_with_connected_account?: {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_connected_account";
    } | null | undefined;
    salto_ks_subscription_limit_almost_reached?: {
        message: string;
        created_at: string;
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        warning_code: "salto_ks_subscription_limit_almost_reached";
    } | null | undefined;
    account_reauthorization_requested?: {
        message: string;
        created_at: string;
        warning_code: "account_reauthorization_requested";
    } | null | undefined;
}, {
    scheduled_maintenance_window?: {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    } | null | undefined;
    unknown_issue_with_connected_account?: {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_connected_account";
    } | null | undefined;
    salto_ks_subscription_limit_almost_reached?: {
        message: string;
        created_at: string;
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        warning_code: "salto_ks_subscription_limit_almost_reached";
    } | null | undefined;
    account_reauthorization_requested?: {
        message: string;
        created_at: string;
        warning_code: "account_reauthorization_requested";
    } | null | undefined;
}>;
export type ConnectedAccountWarningMap = z.infer<typeof _connected_account_warning_map>;
export declare const connected_account: z.ZodObject<{
    connected_account_id: z.ZodString;
    created_at: z.ZodOptional<z.ZodString>;
    user_identifier: z.ZodOptional<z.ZodObject<{
        username: z.ZodOptional<z.ZodString>;
        api_url: z.ZodOptional<z.ZodString>;
        email: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        exclusive: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        phone?: string | undefined;
        username?: string | undefined;
        api_url?: string | undefined;
        email?: string | undefined;
        exclusive?: boolean | undefined;
    }, {
        phone?: string | undefined;
        username?: string | undefined;
        api_url?: string | undefined;
        email?: string | undefined;
        exclusive?: boolean | undefined;
    }>>;
    account_type: z.ZodOptional<z.ZodString>;
    account_type_display_name: z.ZodString;
    errors: z.ZodArray<z.ZodDiscriminatedUnion<"error_code", [z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"account_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }>, z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"bridge_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }>, z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"salto_ks_subscription_limit_exceeded">;
        salto_ks_metadata: z.ZodObject<{
            sites: z.ZodArray<z.ZodObject<{
                site_id: z.ZodString;
                site_name: z.ZodString;
                subscribed_site_user_count: z.ZodNumber;
                site_user_subscription_limit: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }>]>, "many">;
    warnings: z.ZodArray<z.ZodDiscriminatedUnion<"warning_code", [z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"scheduled_maintenance_window">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    }, {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    }>, z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"unknown_issue_with_connected_account">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_connected_account";
    }, {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_connected_account";
    }>, z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"salto_ks_subscription_limit_almost_reached">;
        salto_ks_metadata: z.ZodObject<{
            sites: z.ZodArray<z.ZodObject<{
                site_id: z.ZodString;
                site_name: z.ZodString;
                site_user_subscription_limit: z.ZodNumber;
                subscribed_site_user_count: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        warning_code: "salto_ks_subscription_limit_almost_reached";
    }, {
        message: string;
        created_at: string;
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        warning_code: "salto_ks_subscription_limit_almost_reached";
    }>, z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"account_reauthorization_requested">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "account_reauthorization_requested";
    }, {
        message: string;
        created_at: string;
        warning_code: "account_reauthorization_requested";
    }>]>, "many">;
    custom_metadata: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>;
    automatically_manage_new_devices: z.ZodBoolean;
    customer_key: z.ZodOptional<z.ZodString>;
    accepted_capabilities: z.ZodArray<z.ZodEnum<["lock", "thermostat", "noise_sensor", "access_control"]>, "many">;
}, "strip", z.ZodTypeAny, {
    errors: ({
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    })[];
    connected_account_id: string;
    account_type_display_name: string;
    warnings: ({
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    } | {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_connected_account";
    } | {
        message: string;
        created_at: string;
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        warning_code: "salto_ks_subscription_limit_almost_reached";
    } | {
        message: string;
        created_at: string;
        warning_code: "account_reauthorization_requested";
    })[];
    custom_metadata: Record<string, string | boolean>;
    automatically_manage_new_devices: boolean;
    accepted_capabilities: ("lock" | "thermostat" | "noise_sensor" | "access_control")[];
    created_at?: string | undefined;
    user_identifier?: {
        phone?: string | undefined;
        username?: string | undefined;
        api_url?: string | undefined;
        email?: string | undefined;
        exclusive?: boolean | undefined;
    } | undefined;
    account_type?: string | undefined;
    customer_key?: string | undefined;
}, {
    errors: ({
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    })[];
    connected_account_id: string;
    account_type_display_name: string;
    warnings: ({
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    } | {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_connected_account";
    } | {
        message: string;
        created_at: string;
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        warning_code: "salto_ks_subscription_limit_almost_reached";
    } | {
        message: string;
        created_at: string;
        warning_code: "account_reauthorization_requested";
    })[];
    custom_metadata: Record<string, string | boolean>;
    automatically_manage_new_devices: boolean;
    accepted_capabilities: ("lock" | "thermostat" | "noise_sensor" | "access_control")[];
    created_at?: string | undefined;
    user_identifier?: {
        phone?: string | undefined;
        username?: string | undefined;
        api_url?: string | undefined;
        email?: string | undefined;
        exclusive?: boolean | undefined;
    } | undefined;
    account_type?: string | undefined;
    customer_key?: string | undefined;
}>;
export type ConnectedAccount = z.infer<typeof connected_account>;
export {};
