import { z } from 'zod';
export declare const unmanaged_device: z.ZodObject<Pick<{
    device_id: z.ZodString;
    device_type: z.ZodUnion<[z.ZodEnum<["akuvox_lock" | "august_lock" | "brivo_access_point" | "butterflymx_panel" | "avigilon_alta_entry" | "doorking_lock" | "genie_door" | "igloo_lock" | "linear_lock" | "lockly_lock" | "kwikset_lock" | "nuki_lock" | "salto_lock" | "schlage_lock" | "seam_relay" | "smartthings_lock" | "wyze_lock" | "yale_lock" | "two_n_intercom" | "controlbyweb_device" | "ttlock_lock" | "igloohome_lock" | "hubitat_lock" | "four_suites_door" | "dormakaba_oracode_door" | "tedee_lock" | "akiles_lock"]>, z.ZodEnum<["keynest_key"]>, z.ZodEnum<["noiseaware_activity_zone" | "minut_sensor"]>, z.ZodEnum<["ecobee_thermostat" | "nest_thermostat" | "honeywell_resideo_thermostat" | "tado_thermostat" | "sensi_thermostat" | "smartthings_thermostat"]>, z.ZodEnum<["ios_phone" | "android_phone"]>]>;
    space_ids: z.ZodArray<z.ZodString, "many">;
    nickname: z.ZodOptional<z.ZodString>;
    display_name: z.ZodString;
    capabilities_supported: z.ZodArray<z.ZodEnum<["access_code", "lock", "noise_detection", "thermostat", "battery", "phone"]>, "many">;
    properties: z.ZodIntersection<z.ZodIntersection<z.ZodIntersection<z.ZodObject<{
        online: z.ZodBoolean;
        name: z.ZodString;
        accessory_keypad: z.ZodOptional<z.ZodObject<{
            is_connected: z.ZodBoolean;
            battery: z.ZodOptional<z.ZodObject<{
                level: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                level: number;
            }, {
                level: number;
            }>>;
        }, "strip", z.ZodTypeAny, {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        }, {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        }>>;
        appearance: z.ZodObject<{
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>;
        model: z.ZodObject<{
            can_connect_accessory_keypad: z.ZodOptional<z.ZodBoolean>;
            display_name: z.ZodString;
            manufacturer_display_name: z.ZodString;
            has_built_in_keypad: z.ZodOptional<z.ZodBoolean>;
            offline_access_codes_supported: z.ZodOptional<z.ZodBoolean>;
            online_access_codes_supported: z.ZodOptional<z.ZodBoolean>;
            accessory_keypad_supported: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        }, {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        }>;
        has_direct_power: z.ZodOptional<z.ZodBoolean>;
        battery_level: z.ZodOptional<z.ZodNumber>;
        battery: z.ZodOptional<z.ZodObject<{
            level: z.ZodNumber;
            status: z.ZodEnum<["critical", "low", "good", "full"]>;
        }, "strip", z.ZodTypeAny, {
            status: "critical" | "low" | "good" | "full";
            level: number;
        }, {
            status: "critical" | "low" | "good" | "full";
            level: number;
        }>>;
        manufacturer: z.ZodOptional<z.ZodString>;
        image_url: z.ZodOptional<z.ZodString>;
        image_alt_text: z.ZodOptional<z.ZodString>;
        serial_number: z.ZodOptional<z.ZodString>;
        online_access_codes_enabled: z.ZodOptional<z.ZodBoolean>;
        offline_access_codes_enabled: z.ZodOptional<z.ZodBoolean>;
        supports_accessory_keypad: z.ZodOptional<z.ZodBoolean>;
        supports_offline_access_codes: z.ZodOptional<z.ZodBoolean>;
        noise_level_decibels: z.ZodOptional<z.ZodNumber>;
        currently_triggering_noise_threshold_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        online: boolean;
        appearance: {
            name: string;
        };
        battery?: {
            status: "critical" | "low" | "good" | "full";
            level: number;
        } | undefined;
        battery_level?: number | undefined;
        serial_number?: string | undefined;
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        has_direct_power?: boolean | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
        supports_accessory_keypad?: boolean | undefined;
        supports_offline_access_codes?: boolean | undefined;
        noise_level_decibels?: number | undefined;
        currently_triggering_noise_threshold_ids?: string[] | undefined;
    }, {
        name: string;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        online: boolean;
        appearance: {
            name: string;
        };
        battery?: {
            status: "critical" | "low" | "good" | "full";
            level: number;
        } | undefined;
        battery_level?: number | undefined;
        serial_number?: string | undefined;
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        has_direct_power?: boolean | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
        supports_accessory_keypad?: boolean | undefined;
        supports_offline_access_codes?: boolean | undefined;
        noise_level_decibels?: number | undefined;
        currently_triggering_noise_threshold_ids?: string[] | undefined;
    }>, z.ZodObject<{
        assa_abloy_credential_service_metadata: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            has_active_endpoint: z.ZodBoolean;
            endpoints: z.ZodArray<z.ZodObject<{
                endpoint_id: z.ZodString;
                is_active: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                endpoint_id: string;
                is_active: boolean;
            }, {
                endpoint_id: string;
                is_active: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        }, {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        }>>>;
        salto_space_credential_service_metadata: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            has_active_phone: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            has_active_phone: boolean;
        }, {
            has_active_phone: boolean;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        assa_abloy_credential_service_metadata?: {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        } | undefined;
        salto_space_credential_service_metadata?: {
            has_active_phone: boolean;
        } | undefined;
    }, {
        assa_abloy_credential_service_metadata?: {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        } | undefined;
        salto_space_credential_service_metadata?: {
            has_active_phone: boolean;
        } | undefined;
    }>>, z.ZodObject<{
        august_metadata: z.ZodOptional<z.ZodObject<{
            lock_id: z.ZodString;
            lock_name: z.ZodString;
            house_name: z.ZodString;
            has_keypad: z.ZodBoolean;
            keypad_battery_level: z.ZodOptional<z.ZodString>;
            model: z.ZodOptional<z.ZodString>;
            house_id: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        }, {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        }>>;
        avigilon_alta_metadata: z.ZodOptional<z.ZodObject<{
            entry_name: z.ZodString;
            org_name: z.ZodString;
            zone_id: z.ZodNumber;
            zone_name: z.ZodString;
            site_id: z.ZodNumber;
            site_name: z.ZodString;
            entry_relays_total_count: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            site_id: number;
            site_name: string;
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            entry_relays_total_count: number;
        }, {
            site_id: number;
            site_name: string;
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            entry_relays_total_count: number;
        }>>;
        schlage_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        }, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        }>>;
        smartthings_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
            location_id: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        }, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        }>>;
        lockly_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        }, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        }>>;
        nuki_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            keypad_battery_critical: z.ZodOptional<z.ZodBoolean>;
            keypad_paired: z.ZodOptional<z.ZodBoolean>;
            keypad_2_paired: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        }, {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        }>>;
        kwikset_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            model_number: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            model_number: string;
        }, {
            device_id: string;
            device_name: string;
            model_number: string;
        }>>;
        salto_metadata: z.ZodOptional<z.ZodObject<{
            lock_id: z.ZodString;
            customer_reference: z.ZodString;
            lock_type: z.ZodString;
            battery_level: z.ZodString;
            locked_state: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        }, {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        }>>;
        salto_ks_metadata: z.ZodOptional<z.ZodObject<{
            lock_id: z.ZodString;
            customer_reference: z.ZodString;
            lock_type: z.ZodString;
            battery_level: z.ZodString;
            locked_state: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        }, {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        }>>;
        genie_metadata: z.ZodOptional<z.ZodObject<{
            device_name: z.ZodString;
            door_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_name: string;
            door_name: string;
        }, {
            device_name: string;
            door_name: string;
        }>>;
        brivo_metadata: z.ZodOptional<z.ZodObject<{
            device_name: z.ZodOptional<z.ZodString>;
            activation_enabled: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            device_name?: string | undefined;
            activation_enabled?: boolean | undefined;
        }, {
            device_name?: string | undefined;
            activation_enabled?: boolean | undefined;
        }>>;
        igloo_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            bridge_id: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        }, {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        }>>;
        noiseaware_metadata: z.ZodOptional<z.ZodObject<{
            device_model: z.ZodEnum<["indoor", "outdoor"]>;
            noise_level_nrs: z.ZodNumber;
            noise_level_decibel: z.ZodNumber;
            device_name: z.ZodString;
            device_id: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        }, {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        }>>;
        minut_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            latest_sensor_values: z.ZodObject<{
                temperature: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    time: string;
                }, {
                    value: number;
                    time: string;
                }>;
                sound: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    time: string;
                }, {
                    value: number;
                    time: string;
                }>;
                humidity: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    time: string;
                }, {
                    value: number;
                    time: string;
                }>;
                pressure: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    time: string;
                }, {
                    value: number;
                    time: string;
                }>;
                accelerometer_z: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    time: string;
                }, {
                    value: number;
                    time: string;
                }>;
            }, "strip", z.ZodTypeAny, {
                temperature: {
                    value: number;
                    time: string;
                };
                sound: {
                    value: number;
                    time: string;
                };
                humidity: {
                    value: number;
                    time: string;
                };
                pressure: {
                    value: number;
                    time: string;
                };
                accelerometer_z: {
                    value: number;
                    time: string;
                };
            }, {
                temperature: {
                    value: number;
                    time: string;
                };
                sound: {
                    value: number;
                    time: string;
                };
                humidity: {
                    value: number;
                    time: string;
                };
                pressure: {
                    value: number;
                    time: string;
                };
                accelerometer_z: {
                    value: number;
                    time: string;
                };
            }>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                temperature: {
                    value: number;
                    time: string;
                };
                sound: {
                    value: number;
                    time: string;
                };
                humidity: {
                    value: number;
                    time: string;
                };
                pressure: {
                    value: number;
                    time: string;
                };
                accelerometer_z: {
                    value: number;
                    time: string;
                };
            };
        }, {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                temperature: {
                    value: number;
                    time: string;
                };
                sound: {
                    value: number;
                    time: string;
                };
                humidity: {
                    value: number;
                    time: string;
                };
                pressure: {
                    value: number;
                    time: string;
                };
                accelerometer_z: {
                    value: number;
                    time: string;
                };
            };
        }>>;
        four_suites_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodNumber;
            device_name: z.ZodString;
            reclose_delay_in_seconds: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        }, {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        }>>;
        two_n_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodNumber;
            device_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: number;
            device_name: string;
        }, {
            device_id: number;
            device_name: string;
        }>>;
        controlbyweb_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            relay_name: z.ZodNullable<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        }, {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        }>>;
        ttlock_metadata: z.ZodOptional<z.ZodObject<{
            lock_id: z.ZodNumber;
            lock_alias: z.ZodString;
            feature_value: z.ZodString;
            features: z.ZodObject<{
                passcode: z.ZodBoolean;
                passcode_management: z.ZodBoolean;
                unlock_via_gateway: z.ZodBoolean;
                lock_command: z.ZodBoolean;
                incomplete_keyboard_passcode: z.ZodBoolean;
                wifi: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                passcode: boolean;
                passcode_management: boolean;
                unlock_via_gateway: boolean;
                lock_command: boolean;
                incomplete_keyboard_passcode: boolean;
                wifi: boolean;
            }, {
                passcode: boolean;
                passcode_management: boolean;
                unlock_via_gateway: boolean;
                lock_command: boolean;
                incomplete_keyboard_passcode: boolean;
                wifi: boolean;
            }>;
            has_gateway: z.ZodOptional<z.ZodBoolean>;
            wireless_keypads: z.ZodOptional<z.ZodArray<z.ZodObject<{
                wireless_keypad_id: z.ZodNumber;
                wireless_keypad_name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                wireless_keypad_id: number;
                wireless_keypad_name: string;
            }, {
                wireless_keypad_id: number;
                wireless_keypad_name: string;
            }>, "many">>;
        }, "strip", z.ZodTypeAny, {
            lock_id: number;
            lock_alias: string;
            feature_value: string;
            features: {
                passcode: boolean;
                passcode_management: boolean;
                unlock_via_gateway: boolean;
                lock_command: boolean;
                incomplete_keyboard_passcode: boolean;
                wifi: boolean;
            };
            has_gateway?: boolean | undefined;
            wireless_keypads?: {
                wireless_keypad_id: number;
                wireless_keypad_name: string;
            }[] | undefined;
        }, {
            lock_id: number;
            lock_alias: string;
            feature_value: string;
            features: {
                passcode: boolean;
                passcode_management: boolean;
                unlock_via_gateway: boolean;
                lock_command: boolean;
                incomplete_keyboard_passcode: boolean;
                wifi: boolean;
            };
            has_gateway?: boolean | undefined;
            wireless_keypads?: {
                wireless_keypad_id: number;
                wireless_keypad_name: string;
            }[] | undefined;
        }>>;
        seam_bridge_metadata: z.ZodOptional<z.ZodObject<{
            unlock_method: z.ZodOptional<z.ZodEnum<["bridge", "doorking"]>>;
            device_num: z.ZodNumber;
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        }, {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        }>>;
        igloohome_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            bridge_id: z.ZodOptional<z.ZodString>;
            bridge_name: z.ZodOptional<z.ZodString>;
            keypad_id: z.ZodOptional<z.ZodString>;
            is_keypad_linked_to_bridge: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
            keypad_id?: string | undefined;
            is_keypad_linked_to_bridge?: boolean | undefined;
        }, {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
            keypad_id?: string | undefined;
            is_keypad_linked_to_bridge?: boolean | undefined;
        }>>;
        nest_metadata: z.ZodOptional<z.ZodObject<{
            nest_device_id: z.ZodString;
            device_name: z.ZodString;
            device_custom_name: z.ZodString;
            display_name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_name: string;
            nest_device_id: string;
            device_custom_name: string;
            display_name?: string | undefined;
        }, {
            device_name: string;
            nest_device_id: string;
            device_custom_name: string;
            display_name?: string | undefined;
        }>>;
        ecobee_metadata: z.ZodOptional<z.ZodObject<{
            ecobee_device_id: z.ZodString;
            device_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_name: string;
            ecobee_device_id: string;
        }, {
            device_name: string;
            ecobee_device_id: string;
        }>>;
        honeywell_resideo_metadata: z.ZodOptional<z.ZodObject<{
            honeywell_resideo_device_id: z.ZodString;
            device_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_name: string;
            honeywell_resideo_device_id: string;
        }, {
            device_name: string;
            honeywell_resideo_device_id: string;
        }>>;
        hubitat_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            device_label: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            device_label: string;
        }, {
            device_id: string;
            device_name: string;
            device_label: string;
        }>>;
        dormakaba_oracode_metadata: z.ZodOptional<z.ZodObject<{
            door_id: z.ZodOptional<z.ZodNumber>;
            door_name: z.ZodString;
            device_id: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodString]>>;
            door_is_wireless: z.ZodBoolean;
            site_id: z.ZodNullable<z.ZodNumber>;
            site_name: z.ZodString;
            iana_timezone: z.ZodOptional<z.ZodString>;
            predefined_time_slots: z.ZodOptional<z.ZodArray<z.ZodObject<{
                name: z.ZodString;
                prefix: z.ZodNumber;
                check_in_time: z.ZodString;
                check_out_time: z.ZodString;
                is_24_hour: z.ZodBoolean;
                is_biweekly_mode: z.ZodBoolean;
                is_one_shot: z.ZodBoolean;
                is_master: z.ZodBoolean;
                ext_dormakaba_oracode_user_level_prefix: z.ZodNumber;
                dormakaba_oracode_user_level_id: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }, {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }>, "many">>;
        }, "strip", z.ZodTypeAny, {
            site_id: number | null;
            site_name: string;
            door_name: string;
            door_is_wireless: boolean;
            device_id?: string | number | undefined;
            door_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        }, {
            site_id: number | null;
            site_name: string;
            door_name: string;
            door_is_wireless: boolean;
            device_id?: string | number | undefined;
            door_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        }>>;
        wyze_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            product_name: z.ZodString;
            product_type: z.ZodString;
            product_model: z.ZodString;
            device_info_model: z.ZodString;
            keypad_uuid: z.ZodOptional<z.ZodString>;
            locker_status_hardlock: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
            keypad_uuid?: string | undefined;
            locker_status_hardlock?: number | undefined;
        }, {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
            keypad_uuid?: string | undefined;
            locker_status_hardlock?: number | undefined;
        }>>;
        tedee_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodNumber;
            serial_number: z.ZodString;
            device_name: z.ZodString;
            device_model: z.ZodString;
            bridge_id: z.ZodNumber;
            bridge_name: z.ZodString;
            keypad_id: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        }, {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        }>>;
        visionline_metadata: z.ZodOptional<z.ZodObject<{
            encoder_id: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            encoder_id: string;
        }, {
            encoder_id: string;
        }>>;
        akiles_metadata: z.ZodOptional<z.ZodObject<{
            gadget_name: z.ZodString;
            gadget_id: z.ZodString;
            product_name: z.ZodString;
            _member_group_id: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            product_name: string;
            gadget_name: string;
            gadget_id: string;
            _member_group_id?: string | undefined;
        }, {
            product_name: string;
            gadget_name: string;
            gadget_id: string;
            _member_group_id?: string | undefined;
        }>>;
        assa_abloy_vostio_metadata: z.ZodOptional<z.ZodObject<{
            encoder_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            encoder_name: string;
        }, {
            encoder_name: string;
        }>>;
        tado_metadata: z.ZodOptional<z.ZodObject<{
            serial_no: z.ZodString;
            device_type: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            serial_no: string;
            device_type: string;
        }, {
            serial_no: string;
            device_type: string;
        }>>;
        sensi_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            product_type: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            product_type: string;
        }, {
            device_id: string;
            device_name: string;
            product_type: string;
        }>>;
        keynest_metadata: z.ZodOptional<z.ZodObject<{
            key_id: z.ZodOptional<z.ZodString>;
            device_name: z.ZodOptional<z.ZodString>;
            property_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            property_postcode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            key_notes: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            subscription_plan: z.ZodOptional<z.ZodString>;
            status_type: z.ZodOptional<z.ZodString>;
            current_or_last_store_id: z.ZodOptional<z.ZodNumber>;
            last_movement: z.ZodOptional<z.ZodString>;
            address: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            current_status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            current_user_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            current_user_email: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            current_user_phone_number: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            current_user_company: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            handover_method: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            keynest_app_user: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            default_office_id: z.ZodOptional<z.ZodNumber>;
            fob_id: z.ZodOptional<z.ZodNumber>;
            has_photo: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            device_name?: string | undefined;
            key_id?: string | undefined;
            property_id?: string | null | undefined;
            property_postcode?: string | null | undefined;
            key_notes?: string | null | undefined;
            subscription_plan?: string | undefined;
            status_type?: string | undefined;
            current_or_last_store_id?: number | undefined;
            last_movement?: string | undefined;
            address?: string | null | undefined;
            current_status?: string | null | undefined;
            current_user_name?: string | null | undefined;
            current_user_email?: string | null | undefined;
            current_user_phone_number?: string | null | undefined;
            current_user_company?: string | null | undefined;
            handover_method?: string | null | undefined;
            keynest_app_user?: string | null | undefined;
            default_office_id?: number | undefined;
            fob_id?: number | undefined;
            has_photo?: boolean | undefined;
        }, {
            device_name?: string | undefined;
            key_id?: string | undefined;
            property_id?: string | null | undefined;
            property_postcode?: string | null | undefined;
            key_notes?: string | null | undefined;
            subscription_plan?: string | undefined;
            status_type?: string | undefined;
            current_or_last_store_id?: number | undefined;
            last_movement?: string | undefined;
            address?: string | null | undefined;
            current_status?: string | null | undefined;
            current_user_name?: string | null | undefined;
            current_user_email?: string | null | undefined;
            current_user_phone_number?: string | null | undefined;
            current_user_company?: string | null | undefined;
            handover_method?: string | null | undefined;
            keynest_app_user?: string | null | undefined;
            default_office_id?: number | undefined;
            fob_id?: number | undefined;
            has_photo?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        ecobee_metadata?: {
            device_name: string;
            ecobee_device_id: string;
        } | undefined;
        salto_ks_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        august_metadata?: {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        } | undefined;
        avigilon_alta_metadata?: {
            site_id: number;
            site_name: string;
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            entry_relays_total_count: number;
        } | undefined;
        schlage_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        smartthings_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        } | undefined;
        lockly_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        nuki_metadata?: {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        } | undefined;
        kwikset_metadata?: {
            device_id: string;
            device_name: string;
            model_number: string;
        } | undefined;
        salto_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        genie_metadata?: {
            device_name: string;
            door_name: string;
        } | undefined;
        brivo_metadata?: {
            device_name?: string | undefined;
            activation_enabled?: boolean | undefined;
        } | undefined;
        igloo_metadata?: {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        } | undefined;
        noiseaware_metadata?: {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        } | undefined;
        minut_metadata?: {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                temperature: {
                    value: number;
                    time: string;
                };
                sound: {
                    value: number;
                    time: string;
                };
                humidity: {
                    value: number;
                    time: string;
                };
                pressure: {
                    value: number;
                    time: string;
                };
                accelerometer_z: {
                    value: number;
                    time: string;
                };
            };
        } | undefined;
        four_suites_metadata?: {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        } | undefined;
        two_n_metadata?: {
            device_id: number;
            device_name: string;
        } | undefined;
        controlbyweb_metadata?: {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        } | undefined;
        ttlock_metadata?: {
            lock_id: number;
            lock_alias: string;
            feature_value: string;
            features: {
                passcode: boolean;
                passcode_management: boolean;
                unlock_via_gateway: boolean;
                lock_command: boolean;
                incomplete_keyboard_passcode: boolean;
                wifi: boolean;
            };
            has_gateway?: boolean | undefined;
            wireless_keypads?: {
                wireless_keypad_id: number;
                wireless_keypad_name: string;
            }[] | undefined;
        } | undefined;
        seam_bridge_metadata?: {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        } | undefined;
        igloohome_metadata?: {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
            keypad_id?: string | undefined;
            is_keypad_linked_to_bridge?: boolean | undefined;
        } | undefined;
        nest_metadata?: {
            device_name: string;
            nest_device_id: string;
            device_custom_name: string;
            display_name?: string | undefined;
        } | undefined;
        honeywell_resideo_metadata?: {
            device_name: string;
            honeywell_resideo_device_id: string;
        } | undefined;
        hubitat_metadata?: {
            device_id: string;
            device_name: string;
            device_label: string;
        } | undefined;
        dormakaba_oracode_metadata?: {
            site_id: number | null;
            site_name: string;
            door_name: string;
            door_is_wireless: boolean;
            device_id?: string | number | undefined;
            door_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        } | undefined;
        wyze_metadata?: {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
            keypad_uuid?: string | undefined;
            locker_status_hardlock?: number | undefined;
        } | undefined;
        tedee_metadata?: {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        } | undefined;
        visionline_metadata?: {
            encoder_id: string;
        } | undefined;
        akiles_metadata?: {
            product_name: string;
            gadget_name: string;
            gadget_id: string;
            _member_group_id?: string | undefined;
        } | undefined;
        assa_abloy_vostio_metadata?: {
            encoder_name: string;
        } | undefined;
        tado_metadata?: {
            serial_no: string;
            device_type: string;
        } | undefined;
        sensi_metadata?: {
            device_id: string;
            device_name: string;
            product_type: string;
        } | undefined;
        keynest_metadata?: {
            device_name?: string | undefined;
            key_id?: string | undefined;
            property_id?: string | null | undefined;
            property_postcode?: string | null | undefined;
            key_notes?: string | null | undefined;
            subscription_plan?: string | undefined;
            status_type?: string | undefined;
            current_or_last_store_id?: number | undefined;
            last_movement?: string | undefined;
            address?: string | null | undefined;
            current_status?: string | null | undefined;
            current_user_name?: string | null | undefined;
            current_user_email?: string | null | undefined;
            current_user_phone_number?: string | null | undefined;
            current_user_company?: string | null | undefined;
            handover_method?: string | null | undefined;
            keynest_app_user?: string | null | undefined;
            default_office_id?: number | undefined;
            fob_id?: number | undefined;
            has_photo?: boolean | undefined;
        } | undefined;
    }, {
        ecobee_metadata?: {
            device_name: string;
            ecobee_device_id: string;
        } | undefined;
        salto_ks_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        august_metadata?: {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        } | undefined;
        avigilon_alta_metadata?: {
            site_id: number;
            site_name: string;
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            entry_relays_total_count: number;
        } | undefined;
        schlage_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        smartthings_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        } | undefined;
        lockly_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        nuki_metadata?: {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        } | undefined;
        kwikset_metadata?: {
            device_id: string;
            device_name: string;
            model_number: string;
        } | undefined;
        salto_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        genie_metadata?: {
            device_name: string;
            door_name: string;
        } | undefined;
        brivo_metadata?: {
            device_name?: string | undefined;
            activation_enabled?: boolean | undefined;
        } | undefined;
        igloo_metadata?: {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        } | undefined;
        noiseaware_metadata?: {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        } | undefined;
        minut_metadata?: {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                temperature: {
                    value: number;
                    time: string;
                };
                sound: {
                    value: number;
                    time: string;
                };
                humidity: {
                    value: number;
                    time: string;
                };
                pressure: {
                    value: number;
                    time: string;
                };
                accelerometer_z: {
                    value: number;
                    time: string;
                };
            };
        } | undefined;
        four_suites_metadata?: {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        } | undefined;
        two_n_metadata?: {
            device_id: number;
            device_name: string;
        } | undefined;
        controlbyweb_metadata?: {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        } | undefined;
        ttlock_metadata?: {
            lock_id: number;
            lock_alias: string;
            feature_value: string;
            features: {
                passcode: boolean;
                passcode_management: boolean;
                unlock_via_gateway: boolean;
                lock_command: boolean;
                incomplete_keyboard_passcode: boolean;
                wifi: boolean;
            };
            has_gateway?: boolean | undefined;
            wireless_keypads?: {
                wireless_keypad_id: number;
                wireless_keypad_name: string;
            }[] | undefined;
        } | undefined;
        seam_bridge_metadata?: {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        } | undefined;
        igloohome_metadata?: {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
            keypad_id?: string | undefined;
            is_keypad_linked_to_bridge?: boolean | undefined;
        } | undefined;
        nest_metadata?: {
            device_name: string;
            nest_device_id: string;
            device_custom_name: string;
            display_name?: string | undefined;
        } | undefined;
        honeywell_resideo_metadata?: {
            device_name: string;
            honeywell_resideo_device_id: string;
        } | undefined;
        hubitat_metadata?: {
            device_id: string;
            device_name: string;
            device_label: string;
        } | undefined;
        dormakaba_oracode_metadata?: {
            site_id: number | null;
            site_name: string;
            door_name: string;
            door_is_wireless: boolean;
            device_id?: string | number | undefined;
            door_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        } | undefined;
        wyze_metadata?: {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
            keypad_uuid?: string | undefined;
            locker_status_hardlock?: number | undefined;
        } | undefined;
        tedee_metadata?: {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        } | undefined;
        visionline_metadata?: {
            encoder_id: string;
        } | undefined;
        akiles_metadata?: {
            product_name: string;
            gadget_name: string;
            gadget_id: string;
            _member_group_id?: string | undefined;
        } | undefined;
        assa_abloy_vostio_metadata?: {
            encoder_name: string;
        } | undefined;
        tado_metadata?: {
            serial_no: string;
            device_type: string;
        } | undefined;
        sensi_metadata?: {
            device_id: string;
            device_name: string;
            product_type: string;
        } | undefined;
        keynest_metadata?: {
            device_name?: string | undefined;
            key_id?: string | undefined;
            property_id?: string | null | undefined;
            property_postcode?: string | null | undefined;
            key_notes?: string | null | undefined;
            subscription_plan?: string | undefined;
            status_type?: string | undefined;
            current_or_last_store_id?: number | undefined;
            last_movement?: string | undefined;
            address?: string | null | undefined;
            current_status?: string | null | undefined;
            current_user_name?: string | null | undefined;
            current_user_email?: string | null | undefined;
            current_user_phone_number?: string | null | undefined;
            current_user_company?: string | null | undefined;
            handover_method?: string | null | undefined;
            keynest_app_user?: string | null | undefined;
            default_office_id?: number | undefined;
            fob_id?: number | undefined;
            has_photo?: boolean | undefined;
        } | undefined;
    }>>, z.ZodIntersection<z.ZodObject<{
        _experimental_supported_code_from_access_codes_lengths: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>>;
        code_constraints: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            constraint_type: z.ZodEnum<["no_zeros", "cannot_start_with_12", "no_triple_consecutive_ints", "cannot_specify_pin_code", "pin_code_matches_existing_set", "start_date_in_future", "no_ascending_or_descending_sequence", "at_least_three_unique_digits", "cannot_contain_089", "cannot_contain_0789", "unique_first_four_digits"]>;
        }, "strip", z.ZodTypeAny, {
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits" | "cannot_contain_089" | "cannot_contain_0789" | "unique_first_four_digits";
        }, {
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits" | "cannot_contain_089" | "cannot_contain_0789" | "unique_first_four_digits";
        }>, z.ZodObject<{
            constraint_type: z.ZodEnum<["name_length", "name_must_be_unique"]>;
            min_length: z.ZodOptional<z.ZodNumber>;
            max_length: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            constraint_type: "name_length" | "name_must_be_unique";
            min_length?: number | undefined;
            max_length?: number | undefined;
        }, {
            constraint_type: "name_length" | "name_must_be_unique";
            min_length?: number | undefined;
            max_length?: number | undefined;
        }>]>, "many">>>;
        supported_code_lengths: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>>;
        max_active_codes_supported: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
        supports_backup_access_code_pool: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
        has_native_entry_events: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
    } & {
        locked: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
        keypad_battery: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            level: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            level: number;
        }, {
            level: number;
        }>>>;
        door_open: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
    }, "strip", z.ZodTypeAny, {
        _experimental_supported_code_from_access_codes_lengths?: number[] | undefined;
        code_constraints?: ({
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits" | "cannot_contain_089" | "cannot_contain_0789" | "unique_first_four_digits";
        } | {
            constraint_type: "name_length" | "name_must_be_unique";
            min_length?: number | undefined;
            max_length?: number | undefined;
        })[] | undefined;
        supported_code_lengths?: number[] | undefined;
        max_active_codes_supported?: number | undefined;
        supports_backup_access_code_pool?: boolean | undefined;
        has_native_entry_events?: boolean | undefined;
        locked?: boolean | undefined;
        keypad_battery?: {
            level: number;
        } | undefined;
        door_open?: boolean | undefined;
    }, {
        _experimental_supported_code_from_access_codes_lengths?: number[] | undefined;
        code_constraints?: ({
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits" | "cannot_contain_089" | "cannot_contain_0789" | "unique_first_four_digits";
        } | {
            constraint_type: "name_length" | "name_must_be_unique";
            min_length?: number | undefined;
            max_length?: number | undefined;
        })[] | undefined;
        supported_code_lengths?: number[] | undefined;
        max_active_codes_supported?: number | undefined;
        supports_backup_access_code_pool?: boolean | undefined;
        has_native_entry_events?: boolean | undefined;
        locked?: boolean | undefined;
        keypad_battery?: {
            level: number;
        } | undefined;
        door_open?: boolean | undefined;
    }>, z.ZodObject<{
        temperature_fahrenheit: z.ZodOptional<z.ZodNumber>;
        temperature_celsius: z.ZodOptional<z.ZodNumber>;
        relative_humidity: z.ZodOptional<z.ZodNumber>;
        available_hvac_mode_settings: z.ZodOptional<z.ZodArray<z.ZodEnum<["off", "heat", "cool", "heat_cool", "eco"]>, "many">>;
        available_fan_mode_settings: z.ZodOptional<z.ZodArray<z.ZodEnum<["auto", "on", "circulate"]>, "many">>;
        available_climate_preset_modes: z.ZodOptional<z.ZodArray<z.ZodEnum<["home", "away", "wake", "sleep", "occupied", "unoccupied"]>, "many">>;
        is_heating: z.ZodOptional<z.ZodBoolean>;
        is_cooling: z.ZodOptional<z.ZodBoolean>;
        is_fan_running: z.ZodOptional<z.ZodBoolean>;
        fan_mode_setting: z.ZodOptional<z.ZodEnum<["auto", "on", "circulate"]>>;
        is_temporary_manual_override_active: z.ZodOptional<z.ZodBoolean>;
        current_climate_setting: z.ZodOptional<z.ZodObject<{
            climate_preset_key: z.ZodOptional<z.ZodString>;
            can_edit: z.ZodOptional<z.ZodBoolean>;
            can_delete: z.ZodOptional<z.ZodBoolean>;
            can_use_with_thermostat_daily_programs: z.ZodOptional<z.ZodBoolean>;
            name: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodNullable<z.ZodString>>>>;
            display_name: z.ZodOptional<z.ZodString>;
            climate_preset_mode: z.ZodOptional<z.ZodOptional<z.ZodEnum<["home", "away", "wake", "sleep", "occupied", "unoccupied"]>>>;
            fan_mode_setting: z.ZodOptional<z.ZodOptional<z.ZodEnum<["auto", "on", "circulate"]>>>;
            hvac_mode_setting: z.ZodOptional<z.ZodOptional<z.ZodEnum<["off", "heat", "cool", "heat_cool", "eco"]>>>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            manual_override_allowed: z.ZodOptional<z.ZodBoolean>;
            ecobee_metadata: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                climate_ref: z.ZodString;
                is_optimized: z.ZodBoolean;
                owner: z.ZodEnum<["user", "system"]>;
            }, "strip", z.ZodTypeAny, {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            }, {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            }>>>;
        }, "strip", z.ZodTypeAny, {
            climate_preset_key?: string | undefined;
            can_edit?: boolean | undefined;
            can_delete?: boolean | undefined;
            can_use_with_thermostat_daily_programs?: boolean | undefined;
            name?: string | null | undefined;
            display_name?: string | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        }, {
            climate_preset_key?: string | undefined;
            can_edit?: boolean | undefined;
            can_delete?: boolean | undefined;
            can_use_with_thermostat_daily_programs?: boolean | undefined;
            name?: string | null | undefined;
            display_name?: string | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        }>>;
        default_climate_setting: z.ZodOptional<z.ZodObject<{
            climate_preset_key: z.ZodOptional<z.ZodString>;
            can_edit: z.ZodOptional<z.ZodBoolean>;
            can_delete: z.ZodOptional<z.ZodBoolean>;
            can_use_with_thermostat_daily_programs: z.ZodOptional<z.ZodBoolean>;
            name: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodNullable<z.ZodString>>>>;
            display_name: z.ZodOptional<z.ZodString>;
            climate_preset_mode: z.ZodOptional<z.ZodOptional<z.ZodEnum<["home", "away", "wake", "sleep", "occupied", "unoccupied"]>>>;
            fan_mode_setting: z.ZodOptional<z.ZodOptional<z.ZodEnum<["auto", "on", "circulate"]>>>;
            hvac_mode_setting: z.ZodOptional<z.ZodOptional<z.ZodEnum<["off", "heat", "cool", "heat_cool", "eco"]>>>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            manual_override_allowed: z.ZodOptional<z.ZodBoolean>;
            ecobee_metadata: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                climate_ref: z.ZodString;
                is_optimized: z.ZodBoolean;
                owner: z.ZodEnum<["user", "system"]>;
            }, "strip", z.ZodTypeAny, {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            }, {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            }>>>;
        }, "strip", z.ZodTypeAny, {
            climate_preset_key?: string | undefined;
            can_edit?: boolean | undefined;
            can_delete?: boolean | undefined;
            can_use_with_thermostat_daily_programs?: boolean | undefined;
            name?: string | null | undefined;
            display_name?: string | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        }, {
            climate_preset_key?: string | undefined;
            can_edit?: boolean | undefined;
            can_delete?: boolean | undefined;
            can_use_with_thermostat_daily_programs?: boolean | undefined;
            name?: string | null | undefined;
            display_name?: string | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        }>>;
        available_climate_presets: z.ZodOptional<z.ZodArray<z.ZodObject<{
            climate_preset_key: z.ZodString;
            can_edit: z.ZodBoolean;
            can_delete: z.ZodBoolean;
            can_use_with_thermostat_daily_programs: z.ZodBoolean;
            name: z.ZodOptional<z.ZodDefault<z.ZodNullable<z.ZodString>>>;
            display_name: z.ZodString;
            climate_preset_mode: z.ZodOptional<z.ZodEnum<["home", "away", "wake", "sleep", "occupied", "unoccupied"]>>;
            fan_mode_setting: z.ZodOptional<z.ZodEnum<["auto", "on", "circulate"]>>;
            hvac_mode_setting: z.ZodOptional<z.ZodEnum<["off", "heat", "cool", "heat_cool", "eco"]>>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            manual_override_allowed: z.ZodBoolean;
            ecobee_metadata: z.ZodOptional<z.ZodObject<{
                climate_ref: z.ZodString;
                is_optimized: z.ZodBoolean;
                owner: z.ZodEnum<["user", "system"]>;
            }, "strip", z.ZodTypeAny, {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            }, {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            }>>;
        }, "strip", z.ZodTypeAny, {
            climate_preset_key: string;
            can_edit: boolean;
            can_delete: boolean;
            can_use_with_thermostat_daily_programs: boolean;
            display_name: string;
            manual_override_allowed: boolean;
            name?: string | null | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        }, {
            climate_preset_key: string;
            can_edit: boolean;
            can_delete: boolean;
            can_use_with_thermostat_daily_programs: boolean;
            display_name: string;
            manual_override_allowed: boolean;
            name?: string | null | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        }>, "many">>;
        fallback_climate_preset_key: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        active_thermostat_schedule: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            thermostat_schedule_id: z.ZodString;
            device_id: z.ZodString;
            name: z.ZodNullable<z.ZodString>;
            climate_preset_key: z.ZodString;
            max_override_period_minutes: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            starts_at: z.ZodString;
            is_override_allowed: z.ZodOptional<z.ZodBoolean>;
            ends_at: z.ZodString;
            workspace_id: z.ZodString;
            created_at: z.ZodString;
            errors: z.ZodArray<z.ZodObject<{
                error_code: z.ZodString;
                message: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                message: string;
                error_code: string;
            }, {
                message: string;
                error_code: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            climate_preset_key: string;
            name: string | null;
            device_id: string;
            workspace_id: string;
            created_at: string;
            thermostat_schedule_id: string;
            starts_at: string;
            ends_at: string;
            errors: {
                message: string;
                error_code: string;
            }[];
            max_override_period_minutes?: number | null | undefined;
            is_override_allowed?: boolean | undefined;
        }, {
            climate_preset_key: string;
            name: string | null;
            device_id: string;
            workspace_id: string;
            created_at: string;
            thermostat_schedule_id: string;
            starts_at: string;
            ends_at: string;
            errors: {
                message: string;
                error_code: string;
            }[];
            max_override_period_minutes?: number | null | undefined;
            is_override_allowed?: boolean | undefined;
        }>>>;
        active_thermostat_schedule_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        thermostat_daily_programs: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodObject<{
            thermostat_daily_program_id: z.ZodString;
            device_id: z.ZodString;
            name: z.ZodNullable<z.ZodString>;
            periods: z.ZodArray<z.ZodObject<{
                starts_at_time: z.ZodString;
                climate_preset_key: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                climate_preset_key: string;
                starts_at_time: string;
            }, {
                climate_preset_key: string;
                starts_at_time: string;
            }>, "many">;
            workspace_id: z.ZodString;
            created_at: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string | null;
            thermostat_daily_program_id: string;
            device_id: string;
            periods: {
                climate_preset_key: string;
                starts_at_time: string;
            }[];
            workspace_id: string;
            created_at: string;
        }, {
            name: string | null;
            thermostat_daily_program_id: string;
            device_id: string;
            periods: {
                climate_preset_key: string;
                starts_at_time: string;
            }[];
            workspace_id: string;
            created_at: string;
        }>, "many">>>;
        thermostat_weekly_program: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
            monday_program_id: z.ZodNullable<z.ZodString>;
            tuesday_program_id: z.ZodNullable<z.ZodString>;
            wednesday_program_id: z.ZodNullable<z.ZodString>;
            thursday_program_id: z.ZodNullable<z.ZodString>;
            friday_program_id: z.ZodNullable<z.ZodString>;
            saturday_program_id: z.ZodNullable<z.ZodString>;
            sunday_program_id: z.ZodNullable<z.ZodString>;
            created_at: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            created_at: string;
            monday_program_id: string | null;
            tuesday_program_id: string | null;
            wednesday_program_id: string | null;
            thursday_program_id: string | null;
            friday_program_id: string | null;
            saturday_program_id: string | null;
            sunday_program_id: string | null;
        }, {
            created_at: string;
            monday_program_id: string | null;
            tuesday_program_id: string | null;
            wednesday_program_id: string | null;
            thursday_program_id: string | null;
            friday_program_id: string | null;
            saturday_program_id: string | null;
            sunday_program_id: string | null;
        }>>>>;
        min_cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        min_cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        max_cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        max_cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        min_heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        min_heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        max_heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        max_heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        min_heating_cooling_delta_celsius: z.ZodOptional<z.ZodNumber>;
        min_heating_cooling_delta_fahrenheit: z.ZodOptional<z.ZodNumber>;
        temperature_threshold: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            lower_limit_celsius: z.ZodNullable<z.ZodNumber>;
            lower_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
            upper_limit_celsius: z.ZodNullable<z.ZodNumber>;
            upper_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            lower_limit_celsius: number | null;
            lower_limit_fahrenheit: number | null;
            upper_limit_celsius: number | null;
            upper_limit_fahrenheit: number | null;
        }, {
            lower_limit_celsius: number | null;
            lower_limit_fahrenheit: number | null;
            upper_limit_celsius: number | null;
            upper_limit_fahrenheit: number | null;
        }>>>;
        thermostat_daily_program_period_precision_minutes: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
        max_unique_climate_presets_per_thermostat_weekly_program: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
        max_thermostat_daily_program_periods_per_day: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool" | "eco")[] | undefined;
        available_fan_mode_settings?: ("auto" | "on" | "circulate")[] | undefined;
        available_climate_preset_modes?: ("home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied")[] | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            climate_preset_key?: string | undefined;
            can_edit?: boolean | undefined;
            can_delete?: boolean | undefined;
            can_use_with_thermostat_daily_programs?: boolean | undefined;
            name?: string | null | undefined;
            display_name?: string | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        } | undefined;
        default_climate_setting?: {
            climate_preset_key?: string | undefined;
            can_edit?: boolean | undefined;
            can_delete?: boolean | undefined;
            can_use_with_thermostat_daily_programs?: boolean | undefined;
            name?: string | null | undefined;
            display_name?: string | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        } | undefined;
        available_climate_presets?: {
            climate_preset_key: string;
            can_edit: boolean;
            can_delete: boolean;
            can_use_with_thermostat_daily_programs: boolean;
            display_name: string;
            manual_override_allowed: boolean;
            name?: string | null | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        }[] | undefined;
        fallback_climate_preset_key?: string | null | undefined;
        active_thermostat_schedule?: {
            climate_preset_key: string;
            name: string | null;
            device_id: string;
            workspace_id: string;
            created_at: string;
            thermostat_schedule_id: string;
            starts_at: string;
            ends_at: string;
            errors: {
                message: string;
                error_code: string;
            }[];
            max_override_period_minutes?: number | null | undefined;
            is_override_allowed?: boolean | undefined;
        } | null | undefined;
        active_thermostat_schedule_id?: string | null | undefined;
        thermostat_daily_programs?: {
            name: string | null;
            thermostat_daily_program_id: string;
            device_id: string;
            periods: {
                climate_preset_key: string;
                starts_at_time: string;
            }[];
            workspace_id: string;
            created_at: string;
        }[] | undefined;
        thermostat_weekly_program?: {
            created_at: string;
            monday_program_id: string | null;
            tuesday_program_id: string | null;
            wednesday_program_id: string | null;
            thursday_program_id: string | null;
            friday_program_id: string | null;
            saturday_program_id: string | null;
            sunday_program_id: string | null;
        } | null | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        min_heating_cooling_delta_celsius?: number | undefined;
        min_heating_cooling_delta_fahrenheit?: number | undefined;
        temperature_threshold?: {
            lower_limit_celsius: number | null;
            lower_limit_fahrenheit: number | null;
            upper_limit_celsius: number | null;
            upper_limit_fahrenheit: number | null;
        } | undefined;
        thermostat_daily_program_period_precision_minutes?: number | undefined;
        max_unique_climate_presets_per_thermostat_weekly_program?: number | undefined;
        max_thermostat_daily_program_periods_per_day?: number | undefined;
    }, {
        fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool" | "eco")[] | undefined;
        available_fan_mode_settings?: ("auto" | "on" | "circulate")[] | undefined;
        available_climate_preset_modes?: ("home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied")[] | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            climate_preset_key?: string | undefined;
            can_edit?: boolean | undefined;
            can_delete?: boolean | undefined;
            can_use_with_thermostat_daily_programs?: boolean | undefined;
            name?: string | null | undefined;
            display_name?: string | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        } | undefined;
        default_climate_setting?: {
            climate_preset_key?: string | undefined;
            can_edit?: boolean | undefined;
            can_delete?: boolean | undefined;
            can_use_with_thermostat_daily_programs?: boolean | undefined;
            name?: string | null | undefined;
            display_name?: string | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        } | undefined;
        available_climate_presets?: {
            climate_preset_key: string;
            can_edit: boolean;
            can_delete: boolean;
            can_use_with_thermostat_daily_programs: boolean;
            display_name: string;
            manual_override_allowed: boolean;
            name?: string | null | undefined;
            climate_preset_mode?: "home" | "away" | "wake" | "sleep" | "occupied" | "unoccupied" | undefined;
            fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            ecobee_metadata?: {
                climate_ref: string;
                is_optimized: boolean;
                owner: "user" | "system";
            } | undefined;
        }[] | undefined;
        fallback_climate_preset_key?: string | null | undefined;
        active_thermostat_schedule?: {
            climate_preset_key: string;
            name: string | null;
            device_id: string;
            workspace_id: string;
            created_at: string;
            thermostat_schedule_id: string;
            starts_at: string;
            ends_at: string;
            errors: {
                message: string;
                error_code: string;
            }[];
            max_override_period_minutes?: number | null | undefined;
            is_override_allowed?: boolean | undefined;
        } | null | undefined;
        active_thermostat_schedule_id?: string | null | undefined;
        thermostat_daily_programs?: {
            name: string | null;
            thermostat_daily_program_id: string;
            device_id: string;
            periods: {
                climate_preset_key: string;
                starts_at_time: string;
            }[];
            workspace_id: string;
            created_at: string;
        }[] | undefined;
        thermostat_weekly_program?: {
            created_at: string;
            monday_program_id: string | null;
            tuesday_program_id: string | null;
            wednesday_program_id: string | null;
            thursday_program_id: string | null;
            friday_program_id: string | null;
            saturday_program_id: string | null;
            sunday_program_id: string | null;
        } | null | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        min_heating_cooling_delta_celsius?: number | undefined;
        min_heating_cooling_delta_fahrenheit?: number | undefined;
        temperature_threshold?: {
            lower_limit_celsius: number | null;
            lower_limit_fahrenheit: number | null;
            upper_limit_celsius: number | null;
            upper_limit_fahrenheit: number | null;
        } | undefined;
        thermostat_daily_program_period_precision_minutes?: number | undefined;
        max_unique_climate_presets_per_thermostat_weekly_program?: number | undefined;
        max_thermostat_daily_program_periods_per_day?: number | undefined;
    }>>>;
    location: z.ZodNullable<z.ZodObject<{
        location_name: z.ZodOptional<z.ZodString>;
        timezone: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        location_name?: string | undefined;
        timezone?: string | undefined;
    }, {
        location_name?: string | undefined;
        timezone?: string | undefined;
    }>>;
    connected_account_id: z.ZodString;
    workspace_id: z.ZodString;
    errors: z.ZodArray<z.ZodDiscriminatedUnion<"error_code", [z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"account_disconnected">;
        is_connected_account_error: z.ZodLiteral<true>;
        is_device_error: z.ZodLiteral<false>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error: true;
        is_device_error: false;
    }, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error: true;
        is_device_error: false;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"salto_ks_subscription_limit_exceeded">;
        is_connected_account_error: z.ZodLiteral<true>;
        is_device_error: z.ZodLiteral<false>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        is_connected_account_error: true;
        is_device_error: false;
    }, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        is_connected_account_error: true;
        is_device_error: false;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"device_offline">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "device_offline";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "device_offline";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"device_removed">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "device_removed";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "device_removed";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"hub_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "hub_disconnected";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "hub_disconnected";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"device_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "device_disconnected";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "device_disconnected";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"empty_backup_access_code_pool">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "empty_backup_access_code_pool";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "empty_backup_access_code_pool";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"august_lock_not_authorized">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "august_lock_not_authorized";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "august_lock_not_authorized";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"august_lock_missing_bridge">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "august_lock_missing_bridge";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "august_lock_missing_bridge";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"ttlock_lock_not_paired_to_gateway">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "ttlock_lock_not_paired_to_gateway";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "ttlock_lock_not_paired_to_gateway";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"missing_device_credentials">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "missing_device_credentials";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "missing_device_credentials";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"auxiliary_heat_running">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "auxiliary_heat_running";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "auxiliary_heat_running";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"subscription_required">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "subscription_required";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "subscription_required";
        is_device_error: true;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"lockly_missing_wifi_bridge">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "lockly_missing_wifi_bridge";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "lockly_missing_wifi_bridge";
        is_device_error: true;
    }>, ...(z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"account_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }> | z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"bridge_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }> | z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"salto_ks_subscription_limit_exceeded">;
        salto_ks_metadata: z.ZodObject<{
            sites: z.ZodArray<z.ZodObject<{
                site_id: z.ZodString;
                site_name: z.ZodString;
                subscribed_site_user_count: z.ZodNumber;
                site_user_subscription_limit: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }>)[]]>, "many">;
    warnings: z.ZodArray<z.ZodDiscriminatedUnion<"warning_code", [z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"partial_backup_access_code_pool">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "partial_backup_access_code_pool";
    }, {
        message: string;
        created_at: string;
        warning_code: "partial_backup_access_code_pool";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"many_active_backup_codes">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "many_active_backup_codes";
    }, {
        message: string;
        created_at: string;
        warning_code: "many_active_backup_codes";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"wyze_device_missing_gateway">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "wyze_device_missing_gateway";
    }, {
        message: string;
        created_at: string;
        warning_code: "wyze_device_missing_gateway";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"functional_offline_device">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "functional_offline_device";
    }, {
        message: string;
        created_at: string;
        warning_code: "functional_offline_device";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"third_party_integration_detected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "third_party_integration_detected";
    }, {
        message: string;
        created_at: string;
        warning_code: "third_party_integration_detected";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"ttlock_lock_gateway_unlocking_not_enabled">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "ttlock_lock_gateway_unlocking_not_enabled";
    }, {
        message: string;
        created_at: string;
        warning_code: "ttlock_lock_gateway_unlocking_not_enabled";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"ttlock_weak_gateway_signal">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "ttlock_weak_gateway_signal";
    }, {
        message: string;
        created_at: string;
        warning_code: "ttlock_weak_gateway_signal";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"power_saving_mode">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "power_saving_mode";
    }, {
        message: string;
        created_at: string;
        warning_code: "power_saving_mode";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"temperature_threshold_exceeded">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "temperature_threshold_exceeded";
    }, {
        message: string;
        created_at: string;
        warning_code: "temperature_threshold_exceeded";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"device_communication_degraded">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "device_communication_degraded";
    }, {
        message: string;
        created_at: string;
        warning_code: "device_communication_degraded";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"scheduled_maintenance_window">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    }, {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"device_has_flaky_connection">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "device_has_flaky_connection";
    }, {
        message: string;
        created_at: string;
        warning_code: "device_has_flaky_connection";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"salto_ks_office_mode">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "salto_ks_office_mode";
    }, {
        message: string;
        created_at: string;
        warning_code: "salto_ks_office_mode";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"salto_ks_privacy_mode">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "salto_ks_privacy_mode";
    }, {
        message: string;
        created_at: string;
        warning_code: "salto_ks_privacy_mode";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"salto_ks_subscription_limit_almost_reached">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "salto_ks_subscription_limit_almost_reached";
    }, {
        message: string;
        created_at: string;
        warning_code: "salto_ks_subscription_limit_almost_reached";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"unknown_issue_with_phone">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_phone";
    }, {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_phone";
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        warning_code: z.ZodLiteral<"lockly_time_zone_not_configured">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        warning_code: "lockly_time_zone_not_configured";
    }, {
        message: string;
        created_at: string;
        warning_code: "lockly_time_zone_not_configured";
    }>]>, "many">;
    created_at: z.ZodString;
    is_managed: z.ZodLiteral<true>;
    custom_metadata: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>;
} & {
    can_remotely_unlock: z.ZodOptional<z.ZodBoolean>;
    can_remotely_lock: z.ZodOptional<z.ZodBoolean>;
    can_program_offline_access_codes: z.ZodOptional<z.ZodBoolean>;
    can_program_online_access_codes: z.ZodOptional<z.ZodBoolean>;
    can_hvac_heat: z.ZodOptional<z.ZodBoolean>;
    can_hvac_cool: z.ZodOptional<z.ZodBoolean>;
    can_hvac_heat_cool: z.ZodOptional<z.ZodBoolean>;
    can_turn_off_hvac: z.ZodOptional<z.ZodBoolean>;
    can_simulate_removal: z.ZodOptional<z.ZodBoolean>;
    can_simulate_connection: z.ZodOptional<z.ZodBoolean>;
    can_simulate_disconnection: z.ZodOptional<z.ZodBoolean>;
    can_unlock_with_code: z.ZodOptional<z.ZodBoolean>;
    can_run_thermostat_programs: z.ZodOptional<z.ZodBoolean>;
    can_program_thermostat_programs_as_weekday_weekend: z.ZodOptional<z.ZodBoolean>;
    can_program_thermostat_programs_as_different_each_day: z.ZodOptional<z.ZodBoolean>;
    can_program_thermostat_programs_as_same_each_day: z.ZodOptional<z.ZodBoolean>;
    can_simulate_hub_connection: z.ZodOptional<z.ZodBoolean>;
    can_simulate_hub_disconnection: z.ZodOptional<z.ZodBoolean>;
    can_simulate_paid_subscription: z.ZodOptional<z.ZodBoolean>;
}, "device_id" | "workspace_id" | "created_at" | "errors" | "connected_account_id" | "warnings" | "custom_metadata" | "device_type" | "capabilities_supported" | "location"> & {
    is_managed: z.ZodLiteral<false>;
    properties: z.ZodObject<Pick<{
        online: z.ZodBoolean;
        name: z.ZodString;
        accessory_keypad: z.ZodOptional<z.ZodObject<{
            is_connected: z.ZodBoolean;
            battery: z.ZodOptional<z.ZodObject<{
                level: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                level: number;
            }, {
                level: number;
            }>>;
        }, "strip", z.ZodTypeAny, {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        }, {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        }>>;
        appearance: z.ZodObject<{
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>;
        model: z.ZodObject<{
            can_connect_accessory_keypad: z.ZodOptional<z.ZodBoolean>;
            display_name: z.ZodString;
            manufacturer_display_name: z.ZodString;
            has_built_in_keypad: z.ZodOptional<z.ZodBoolean>;
            offline_access_codes_supported: z.ZodOptional<z.ZodBoolean>;
            online_access_codes_supported: z.ZodOptional<z.ZodBoolean>;
            accessory_keypad_supported: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        }, {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        }>;
        has_direct_power: z.ZodOptional<z.ZodBoolean>;
        battery_level: z.ZodOptional<z.ZodNumber>;
        battery: z.ZodOptional<z.ZodObject<{
            level: z.ZodNumber;
            status: z.ZodEnum<["critical", "low", "good", "full"]>;
        }, "strip", z.ZodTypeAny, {
            status: "critical" | "low" | "good" | "full";
            level: number;
        }, {
            status: "critical" | "low" | "good" | "full";
            level: number;
        }>>;
        manufacturer: z.ZodOptional<z.ZodString>;
        image_url: z.ZodOptional<z.ZodString>;
        image_alt_text: z.ZodOptional<z.ZodString>;
        serial_number: z.ZodOptional<z.ZodString>;
        online_access_codes_enabled: z.ZodOptional<z.ZodBoolean>;
        offline_access_codes_enabled: z.ZodOptional<z.ZodBoolean>;
        supports_accessory_keypad: z.ZodOptional<z.ZodBoolean>;
        supports_offline_access_codes: z.ZodOptional<z.ZodBoolean>;
        noise_level_decibels: z.ZodOptional<z.ZodNumber>;
        currently_triggering_noise_threshold_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "battery" | "name" | "model" | "battery_level" | "online" | "accessory_keypad" | "manufacturer" | "image_url" | "image_alt_text" | "online_access_codes_enabled" | "offline_access_codes_enabled">, "strip", z.ZodTypeAny, {
        name: string;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        online: boolean;
        battery?: {
            status: "critical" | "low" | "good" | "full";
            level: number;
        } | undefined;
        battery_level?: number | undefined;
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
    }, {
        name: string;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        online: boolean;
        battery?: {
            status: "critical" | "low" | "good" | "full";
            level: number;
        } | undefined;
        battery_level?: number | undefined;
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
    }>;
} & {
    can_remotely_unlock: z.ZodOptional<z.ZodBoolean>;
    can_remotely_lock: z.ZodOptional<z.ZodBoolean>;
    can_program_offline_access_codes: z.ZodOptional<z.ZodBoolean>;
    can_program_online_access_codes: z.ZodOptional<z.ZodBoolean>;
    can_hvac_heat: z.ZodOptional<z.ZodBoolean>;
    can_hvac_cool: z.ZodOptional<z.ZodBoolean>;
    can_hvac_heat_cool: z.ZodOptional<z.ZodBoolean>;
    can_turn_off_hvac: z.ZodOptional<z.ZodBoolean>;
    can_simulate_removal: z.ZodOptional<z.ZodBoolean>;
    can_simulate_connection: z.ZodOptional<z.ZodBoolean>;
    can_simulate_disconnection: z.ZodOptional<z.ZodBoolean>;
    can_unlock_with_code: z.ZodOptional<z.ZodBoolean>;
    can_run_thermostat_programs: z.ZodOptional<z.ZodBoolean>;
    can_program_thermostat_programs_as_weekday_weekend: z.ZodOptional<z.ZodBoolean>;
    can_program_thermostat_programs_as_different_each_day: z.ZodOptional<z.ZodBoolean>;
    can_program_thermostat_programs_as_same_each_day: z.ZodOptional<z.ZodBoolean>;
    can_simulate_hub_connection: z.ZodOptional<z.ZodBoolean>;
    can_simulate_hub_disconnection: z.ZodOptional<z.ZodBoolean>;
    can_simulate_paid_subscription: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    errors: ({
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "device_offline";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "device_removed";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "hub_disconnected";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "device_disconnected";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error: true;
        is_device_error: false;
    } | {
        message: string;
        created_at: string;
        error_code: "empty_backup_access_code_pool";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "august_lock_not_authorized";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "august_lock_missing_bridge";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        is_connected_account_error: true;
        is_device_error: false;
    } | {
        message: string;
        created_at: string;
        error_code: "ttlock_lock_not_paired_to_gateway";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "missing_device_credentials";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "auxiliary_heat_running";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "subscription_required";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "lockly_missing_wifi_bridge";
        is_device_error: true;
    })[];
    connected_account_id: string;
    warnings: ({
        message: string;
        created_at: string;
        warning_code: "partial_backup_access_code_pool";
    } | {
        message: string;
        created_at: string;
        warning_code: "many_active_backup_codes";
    } | {
        message: string;
        created_at: string;
        warning_code: "salto_ks_office_mode";
    } | {
        message: string;
        created_at: string;
        warning_code: "salto_ks_privacy_mode";
    } | {
        message: string;
        created_at: string;
        warning_code: "salto_ks_subscription_limit_almost_reached";
    } | {
        message: string;
        created_at: string;
        warning_code: "wyze_device_missing_gateway";
    } | {
        message: string;
        created_at: string;
        warning_code: "functional_offline_device";
    } | {
        message: string;
        created_at: string;
        warning_code: "third_party_integration_detected";
    } | {
        message: string;
        created_at: string;
        warning_code: "ttlock_lock_gateway_unlocking_not_enabled";
    } | {
        message: string;
        created_at: string;
        warning_code: "ttlock_weak_gateway_signal";
    } | {
        message: string;
        created_at: string;
        warning_code: "power_saving_mode";
    } | {
        message: string;
        created_at: string;
        warning_code: "temperature_threshold_exceeded";
    } | {
        message: string;
        created_at: string;
        warning_code: "device_communication_degraded";
    } | {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    } | {
        message: string;
        created_at: string;
        warning_code: "device_has_flaky_connection";
    } | {
        message: string;
        created_at: string;
        warning_code: "lockly_time_zone_not_configured";
    } | {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_phone";
    })[];
    custom_metadata: Record<string, string | boolean>;
    device_type: ("akuvox_lock" | "august_lock" | "brivo_access_point" | "butterflymx_panel" | "avigilon_alta_entry" | "doorking_lock" | "genie_door" | "igloo_lock" | "linear_lock" | "lockly_lock" | "kwikset_lock" | "nuki_lock" | "salto_lock" | "schlage_lock" | "seam_relay" | "smartthings_lock" | "wyze_lock" | "yale_lock" | "two_n_intercom" | "controlbyweb_device" | "ttlock_lock" | "igloohome_lock" | "hubitat_lock" | "four_suites_door" | "dormakaba_oracode_door" | "tedee_lock" | "akiles_lock") | "keynest_key" | ("noiseaware_activity_zone" | "minut_sensor") | ("ecobee_thermostat" | "nest_thermostat" | "honeywell_resideo_thermostat" | "tado_thermostat" | "sensi_thermostat" | "smartthings_thermostat") | ("ios_phone" | "android_phone");
    capabilities_supported: ("access_code" | "lock" | "noise_detection" | "thermostat" | "battery" | "phone")[];
    properties: {
        name: string;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        online: boolean;
        battery?: {
            status: "critical" | "low" | "good" | "full";
            level: number;
        } | undefined;
        battery_level?: number | undefined;
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
    };
    location: {
        location_name?: string | undefined;
        timezone?: string | undefined;
    } | null;
    is_managed: false;
    can_remotely_unlock?: boolean | undefined;
    can_remotely_lock?: boolean | undefined;
    can_program_offline_access_codes?: boolean | undefined;
    can_program_online_access_codes?: boolean | undefined;
    can_hvac_heat?: boolean | undefined;
    can_hvac_cool?: boolean | undefined;
    can_hvac_heat_cool?: boolean | undefined;
    can_turn_off_hvac?: boolean | undefined;
    can_simulate_removal?: boolean | undefined;
    can_simulate_connection?: boolean | undefined;
    can_simulate_disconnection?: boolean | undefined;
    can_unlock_with_code?: boolean | undefined;
    can_run_thermostat_programs?: boolean | undefined;
    can_program_thermostat_programs_as_weekday_weekend?: boolean | undefined;
    can_program_thermostat_programs_as_different_each_day?: boolean | undefined;
    can_program_thermostat_programs_as_same_each_day?: boolean | undefined;
    can_simulate_hub_connection?: boolean | undefined;
    can_simulate_hub_disconnection?: boolean | undefined;
    can_simulate_paid_subscription?: boolean | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    errors: ({
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "device_offline";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "device_removed";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "hub_disconnected";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "device_disconnected";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error: true;
        is_device_error: false;
    } | {
        message: string;
        created_at: string;
        error_code: "empty_backup_access_code_pool";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "august_lock_not_authorized";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "august_lock_missing_bridge";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        is_connected_account_error: true;
        is_device_error: false;
    } | {
        message: string;
        created_at: string;
        error_code: "ttlock_lock_not_paired_to_gateway";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "missing_device_credentials";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "auxiliary_heat_running";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "subscription_required";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "lockly_missing_wifi_bridge";
        is_device_error: true;
    })[];
    connected_account_id: string;
    warnings: ({
        message: string;
        created_at: string;
        warning_code: "partial_backup_access_code_pool";
    } | {
        message: string;
        created_at: string;
        warning_code: "many_active_backup_codes";
    } | {
        message: string;
        created_at: string;
        warning_code: "salto_ks_office_mode";
    } | {
        message: string;
        created_at: string;
        warning_code: "salto_ks_privacy_mode";
    } | {
        message: string;
        created_at: string;
        warning_code: "salto_ks_subscription_limit_almost_reached";
    } | {
        message: string;
        created_at: string;
        warning_code: "wyze_device_missing_gateway";
    } | {
        message: string;
        created_at: string;
        warning_code: "functional_offline_device";
    } | {
        message: string;
        created_at: string;
        warning_code: "third_party_integration_detected";
    } | {
        message: string;
        created_at: string;
        warning_code: "ttlock_lock_gateway_unlocking_not_enabled";
    } | {
        message: string;
        created_at: string;
        warning_code: "ttlock_weak_gateway_signal";
    } | {
        message: string;
        created_at: string;
        warning_code: "power_saving_mode";
    } | {
        message: string;
        created_at: string;
        warning_code: "temperature_threshold_exceeded";
    } | {
        message: string;
        created_at: string;
        warning_code: "device_communication_degraded";
    } | {
        message: string;
        created_at: string;
        warning_code: "scheduled_maintenance_window";
    } | {
        message: string;
        created_at: string;
        warning_code: "device_has_flaky_connection";
    } | {
        message: string;
        created_at: string;
        warning_code: "lockly_time_zone_not_configured";
    } | {
        message: string;
        created_at: string;
        warning_code: "unknown_issue_with_phone";
    })[];
    custom_metadata: Record<string, string | boolean>;
    device_type: ("akuvox_lock" | "august_lock" | "brivo_access_point" | "butterflymx_panel" | "avigilon_alta_entry" | "doorking_lock" | "genie_door" | "igloo_lock" | "linear_lock" | "lockly_lock" | "kwikset_lock" | "nuki_lock" | "salto_lock" | "schlage_lock" | "seam_relay" | "smartthings_lock" | "wyze_lock" | "yale_lock" | "two_n_intercom" | "controlbyweb_device" | "ttlock_lock" | "igloohome_lock" | "hubitat_lock" | "four_suites_door" | "dormakaba_oracode_door" | "tedee_lock" | "akiles_lock") | "keynest_key" | ("noiseaware_activity_zone" | "minut_sensor") | ("ecobee_thermostat" | "nest_thermostat" | "honeywell_resideo_thermostat" | "tado_thermostat" | "sensi_thermostat" | "smartthings_thermostat") | ("ios_phone" | "android_phone");
    capabilities_supported: ("access_code" | "lock" | "noise_detection" | "thermostat" | "battery" | "phone")[];
    properties: {
        name: string;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        online: boolean;
        battery?: {
            status: "critical" | "low" | "good" | "full";
            level: number;
        } | undefined;
        battery_level?: number | undefined;
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
    };
    location: {
        location_name?: string | undefined;
        timezone?: string | undefined;
    } | null;
    is_managed: false;
    can_remotely_unlock?: boolean | undefined;
    can_remotely_lock?: boolean | undefined;
    can_program_offline_access_codes?: boolean | undefined;
    can_program_online_access_codes?: boolean | undefined;
    can_hvac_heat?: boolean | undefined;
    can_hvac_cool?: boolean | undefined;
    can_hvac_heat_cool?: boolean | undefined;
    can_turn_off_hvac?: boolean | undefined;
    can_simulate_removal?: boolean | undefined;
    can_simulate_connection?: boolean | undefined;
    can_simulate_disconnection?: boolean | undefined;
    can_unlock_with_code?: boolean | undefined;
    can_run_thermostat_programs?: boolean | undefined;
    can_program_thermostat_programs_as_weekday_weekend?: boolean | undefined;
    can_program_thermostat_programs_as_different_each_day?: boolean | undefined;
    can_program_thermostat_programs_as_same_each_day?: boolean | undefined;
    can_simulate_hub_connection?: boolean | undefined;
    can_simulate_hub_disconnection?: boolean | undefined;
    can_simulate_paid_subscription?: boolean | undefined;
}>;
export type UnmanagedDevice = z.infer<typeof unmanaged_device>;
