import { z } from 'zod';
export declare const connect_webview_login_succeeded_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    connect_webview_id: z.ZodString;
} & {
    event_type: z.ZodLiteral<"connect_webview.login_succeeded">;
    connected_account_id: z.ZodString;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    customer_key: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    connect_webview_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "connect_webview.login_succeeded";
    customer_key?: string | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    connect_webview_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "connect_webview.login_succeeded";
    customer_key?: string | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type ConnectWebviewLoginSucceededEvent = z.infer<typeof connect_webview_login_succeeded_event>;
export declare const connect_webview_login_failed_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    connect_webview_id: z.ZodString;
} & {
    event_type: z.ZodLiteral<"connect_webview.login_failed">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    connect_webview_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "connect_webview.login_failed";
}, {
    workspace_id: string;
    created_at: string;
    connect_webview_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "connect_webview.login_failed";
}>;
export type ConnectWebviewLoginFailedEvent = z.infer<typeof connect_webview_login_failed_event>;
export declare const connect_webview_events: readonly [z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    connect_webview_id: z.ZodString;
} & {
    event_type: z.ZodLiteral<"connect_webview.login_succeeded">;
    connected_account_id: z.ZodString;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    customer_key: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    connect_webview_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "connect_webview.login_succeeded";
    customer_key?: string | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    connect_webview_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "connect_webview.login_succeeded";
    customer_key?: string | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    connect_webview_id: z.ZodString;
} & {
    event_type: z.ZodLiteral<"connect_webview.login_failed">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    connect_webview_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "connect_webview.login_failed";
}, {
    workspace_id: string;
    created_at: string;
    connect_webview_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "connect_webview.login_failed";
}>];
