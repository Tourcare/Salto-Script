import { z } from 'zod';
export declare const lock_method: z.ZodEnum<["keycode", "manual", "automatic", "unknown", "seamapi"]>;
export type LockMethod = z.infer<typeof lock_method>;
export declare const device_connected_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.connected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceConnectedEvent = z.infer<typeof device_connected_event>;
export declare const device_added_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.added">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.added";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.added";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceAddedEvent = z.infer<typeof device_added_event>;
export declare const device_converted_to_unmanaged_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.converted_to_unmanaged">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.converted_to_unmanaged";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.converted_to_unmanaged";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceConvertedToUnmanagedEvent = z.infer<typeof device_converted_to_unmanaged_event>;
export declare const unmanaged_device_converted_to_managed_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.unmanaged.converted_to_managed">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.converted_to_managed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.converted_to_managed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type UnmanagedDeviceConvertedToManagedEvent = z.infer<typeof unmanaged_device_converted_to_managed_event>;
export declare const unmanaged_device_connected_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.unmanaged.connected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type UnmanagedDeviceConnectedEvent = z.infer<typeof unmanaged_device_connected_event>;
export declare const device_disconnected_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.disconnected">;
    error_code: z.ZodEnum<["account_disconnected", "hub_disconnected", "device_disconnected"]>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    error_code: "account_disconnected" | "hub_disconnected" | "device_disconnected";
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    error_code: "account_disconnected" | "hub_disconnected" | "device_disconnected";
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceDisconnectedEvent = z.infer<typeof device_disconnected_event>;
export declare const unmanaged_device_disconnected_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.unmanaged.disconnected">;
    error_code: z.ZodEnum<["account_disconnected", "hub_disconnected", "device_disconnected"]>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    error_code: "account_disconnected" | "hub_disconnected" | "device_disconnected";
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    error_code: "account_disconnected" | "hub_disconnected" | "device_disconnected";
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type UnmanagedDeviceDisconnectedEvent = z.infer<typeof unmanaged_device_disconnected_event>;
export declare const device_tampered_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.tampered">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.tampered";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.tampered";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceTamperedEvent = z.infer<typeof device_tampered_event>;
export declare const device_low_battery_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.low_battery">;
    battery_level: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    battery_level: number;
    event_id: string;
    occurred_at: string;
    event_type: "device.low_battery";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    battery_level: number;
    event_id: string;
    occurred_at: string;
    event_type: "device.low_battery";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceLowBatteryEvent = z.infer<typeof device_low_battery_event>;
export declare const device_battery_status_changed_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.battery_status_changed">;
    battery_status: z.ZodEnum<["critical", "low", "good", "full"]>;
    battery_level: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    battery_level: number;
    event_id: string;
    occurred_at: string;
    event_type: "device.battery_status_changed";
    battery_status: "critical" | "low" | "good" | "full";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    battery_level: number;
    event_id: string;
    occurred_at: string;
    event_type: "device.battery_status_changed";
    battery_status: "critical" | "low" | "good" | "full";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceBatteryStatusChangedEvent = z.infer<typeof device_battery_status_changed_event>;
export declare const device_removed_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.removed">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.removed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.removed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceRemovedEvent = z.infer<typeof device_removed_event>;
export declare const device_deleted_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.deleted">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.deleted";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.deleted";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceDeletedEvent = z.infer<typeof device_deleted_event>;
export declare const device_third_party_integration_detected_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.third_party_integration_detected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.third_party_integration_detected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.third_party_integration_detected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceThirdPartyIntegrationDetectedEvent = z.infer<typeof device_third_party_integration_detected_event>;
export declare const device_third_party_integration_no_longer_detected_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.third_party_integration_no_longer_detected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.third_party_integration_no_longer_detected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.third_party_integration_no_longer_detected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceThirdPartyIntegrationNoLongerDetectedEvent = z.infer<typeof device_third_party_integration_no_longer_detected_event>;
export declare const device_salto_privacy_mode_activated_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.salto.privacy_mode_activated">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.salto.privacy_mode_activated";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.salto.privacy_mode_activated";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceSaltoPrivacyModeActivatedEvent = z.infer<typeof device_salto_privacy_mode_activated_event>;
export declare const device_salto_privacy_mode_deactivated_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.salto.privacy_mode_deactivated">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.salto.privacy_mode_deactivated";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.salto.privacy_mode_deactivated";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceSaltoPrivacyModeDeactivatedEvent = z.infer<typeof device_salto_privacy_mode_deactivated_event>;
export declare const device_connection_became_flaky_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.connection_became_flaky">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connection_became_flaky";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connection_became_flaky";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceConnectionBecameFlakyEvent = z.infer<typeof device_connection_became_flaky_event>;
export declare const device_connection_stabilized_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.connection_stabilized">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connection_stabilized";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connection_stabilized";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceConnectionStabilizedEvent = z.infer<typeof device_connection_stabilized_event>;
export declare const device_error_subscription_required_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.error.subscription_required">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.error.subscription_required";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.error.subscription_required";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceErrorSubscriptionRequiredEvent = z.infer<typeof device_error_subscription_required_event>;
export declare const device_error_subscription_required_resolved_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.error.subscription_required.resolved">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.error.subscription_required.resolved";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.error.subscription_required.resolved";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceErrorSubscriptionRequiredResolvedEvent = z.infer<typeof device_error_subscription_required_resolved_event>;
export declare const device_accessory_keypad_connected_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.accessory_keypad_connected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.accessory_keypad_connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.accessory_keypad_connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceAccessoryKeypadConnectedEvent = z.infer<typeof device_accessory_keypad_connected_event>;
export declare const device_accessory_keypad_disconnected_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.accessory_keypad_disconnected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.accessory_keypad_disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.accessory_keypad_disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceAccessoryKeypadDisconnectedEvent = z.infer<typeof device_accessory_keypad_disconnected_event>;
export declare const noise_sensor_noise_threshold_triggered_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"noise_sensor.noise_threshold_triggered">;
    noise_level_decibels: z.ZodOptional<z.ZodNumber>;
    noise_level_nrs: z.ZodOptional<z.ZodNumber>;
    noise_threshold_id: z.ZodOptional<z.ZodString>;
    noise_threshold_name: z.ZodOptional<z.ZodString>;
    noiseaware_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    minut_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "noise_sensor.noise_threshold_triggered";
    noise_level_nrs?: number | undefined;
    noiseaware_metadata?: Record<string, unknown> | undefined;
    minut_metadata?: Record<string, unknown> | undefined;
    noise_level_decibels?: number | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
    noise_threshold_id?: string | undefined;
    noise_threshold_name?: string | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "noise_sensor.noise_threshold_triggered";
    noise_level_nrs?: number | undefined;
    noiseaware_metadata?: Record<string, unknown> | undefined;
    minut_metadata?: Record<string, unknown> | undefined;
    noise_level_decibels?: number | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
    noise_threshold_id?: string | undefined;
    noise_threshold_name?: string | undefined;
}>;
export type NoiseSensorNoiseThresholdTriggeredEvent = z.infer<typeof noise_sensor_noise_threshold_triggered_event>;
export declare const lock_locked_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"lock.locked">;
    access_code_id: z.ZodOptional<z.ZodString>;
    action_attempt_id: z.ZodOptional<z.ZodString>;
    method: z.ZodEnum<["keycode", "manual", "automatic", "unknown", "seamapi"]>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.locked";
    method: "unknown" | "keycode" | "manual" | "automatic" | "seamapi";
    access_code_id?: string | undefined;
    action_attempt_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.locked";
    method: "unknown" | "keycode" | "manual" | "automatic" | "seamapi";
    access_code_id?: string | undefined;
    action_attempt_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type LockLockedEvent = z.infer<typeof lock_locked_event>;
export declare const lock_unlocked_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"lock.unlocked">;
    access_code_id: z.ZodOptional<z.ZodString>;
    action_attempt_id: z.ZodOptional<z.ZodString>;
    method: z.ZodEnum<["keycode", "manual", "automatic", "unknown", "seamapi"]>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.unlocked";
    method: "unknown" | "keycode" | "manual" | "automatic" | "seamapi";
    access_code_id?: string | undefined;
    action_attempt_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.unlocked";
    method: "unknown" | "keycode" | "manual" | "automatic" | "seamapi";
    access_code_id?: string | undefined;
    action_attempt_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type LockUnlockedEvent = z.infer<typeof lock_unlocked_event>;
export declare const lock_access_denied_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"lock.access_denied">;
    access_code_id: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.access_denied";
    access_code_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.access_denied";
    access_code_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type LockAccessDeniedEvent = z.infer<typeof lock_access_denied_event>;
export declare const thermostat_climate_preset_activated_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.climate_preset_activated">;
    thermostat_schedule_id: z.ZodNullable<z.ZodString>;
    climate_preset_key: z.ZodString;
    is_fallback_climate_preset: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    climate_preset_key: string;
    device_id: string;
    workspace_id: string;
    created_at: string;
    thermostat_schedule_id: string | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.climate_preset_activated";
    is_fallback_climate_preset: boolean;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    climate_preset_key: string;
    device_id: string;
    workspace_id: string;
    created_at: string;
    thermostat_schedule_id: string | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.climate_preset_activated";
    is_fallback_climate_preset: boolean;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type ThermostatClimatePresetActivatedEvent = z.infer<typeof thermostat_climate_preset_activated_event>;
export declare const thermostat_manually_adjusted_method: z.ZodEnum<["seam", "external"]>;
export declare const thermostat_manually_adjusted_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.manually_adjusted">;
    method: z.ZodEnum<["seam", "external"]>;
} & Pick<{
    climate_preset_key: z.ZodOptional<z.ZodString>;
    can_edit: z.ZodOptional<z.ZodBoolean>;
    can_delete: z.ZodOptional<z.ZodBoolean>;
    can_use_with_thermostat_daily_programs: z.ZodOptional<z.ZodBoolean>;
    name: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodNullable<z.ZodString>>>>;
    display_name: z.ZodOptional<z.ZodString>;
    climate_preset_mode: z.ZodOptional<z.ZodOptional<z.ZodEnum<["home", "away", "wake", "sleep", "occupied", "unoccupied"]>>>;
    fan_mode_setting: z.ZodOptional<z.ZodOptional<z.ZodEnum<["auto", "on", "circulate"]>>>;
    hvac_mode_setting: z.ZodOptional<z.ZodOptional<z.ZodEnum<["off", "heat", "cool", "heat_cool", "eco"]>>>;
    cooling_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    heating_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    cooling_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    heating_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    manual_override_allowed: z.ZodOptional<z.ZodBoolean>;
    ecobee_metadata: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        climate_ref: z.ZodString;
        is_optimized: z.ZodBoolean;
        owner: z.ZodEnum<["user", "system"]>;
    }, "strip", z.ZodTypeAny, {
        climate_ref: string;
        is_optimized: boolean;
        owner: "user" | "system";
    }, {
        climate_ref: string;
        is_optimized: boolean;
        owner: "user" | "system";
    }>>>;
}, "fan_mode_setting" | "hvac_mode_setting" | "cooling_set_point_celsius" | "heating_set_point_celsius" | "cooling_set_point_fahrenheit" | "heating_set_point_fahrenheit">, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.manually_adjusted";
    method: "seam" | "external";
    fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
    hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
    cooling_set_point_celsius?: number | undefined;
    heating_set_point_celsius?: number | undefined;
    cooling_set_point_fahrenheit?: number | undefined;
    heating_set_point_fahrenheit?: number | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.manually_adjusted";
    method: "seam" | "external";
    fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
    hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
    cooling_set_point_celsius?: number | undefined;
    heating_set_point_celsius?: number | undefined;
    cooling_set_point_fahrenheit?: number | undefined;
    heating_set_point_fahrenheit?: number | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type ThermostatManuallyAdjustedEvent = z.infer<typeof thermostat_manually_adjusted_event>;
export declare const temperature_threshold_exceeded_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.temperature_threshold_exceeded">;
    temperature_celsius: z.ZodNumber;
    temperature_fahrenheit: z.ZodNumber;
    upper_limit_celsius: z.ZodNullable<z.ZodNumber>;
    upper_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
    lower_limit_celsius: z.ZodNullable<z.ZodNumber>;
    lower_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    lower_limit_celsius: number | null;
    lower_limit_fahrenheit: number | null;
    upper_limit_celsius: number | null;
    upper_limit_fahrenheit: number | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_threshold_exceeded";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    lower_limit_celsius: number | null;
    lower_limit_fahrenheit: number | null;
    upper_limit_celsius: number | null;
    upper_limit_fahrenheit: number | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_threshold_exceeded";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type TemperatureThresholdExceededEvent = z.infer<typeof temperature_threshold_exceeded_event>;
export declare const temperature_threshold_no_longer_exceeded_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.temperature_threshold_no_longer_exceeded">;
    temperature_celsius: z.ZodNumber;
    temperature_fahrenheit: z.ZodNumber;
    upper_limit_celsius: z.ZodNullable<z.ZodNumber>;
    upper_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
    lower_limit_celsius: z.ZodNullable<z.ZodNumber>;
    lower_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    lower_limit_celsius: number | null;
    lower_limit_fahrenheit: number | null;
    upper_limit_celsius: number | null;
    upper_limit_fahrenheit: number | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_threshold_no_longer_exceeded";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    lower_limit_celsius: number | null;
    lower_limit_fahrenheit: number | null;
    upper_limit_celsius: number | null;
    upper_limit_fahrenheit: number | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_threshold_no_longer_exceeded";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type TemperatureThresholdNoLongerExceededEvent = z.infer<typeof temperature_threshold_no_longer_exceeded_event>;
export declare const temperature_reached_set_point_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.temperature_reached_set_point">;
    temperature_celsius: z.ZodNumber;
    temperature_fahrenheit: z.ZodNumber;
    desired_temperature_celsius: z.ZodOptional<z.ZodNumber>;
    desired_temperature_fahrenheit: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_reached_set_point";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
    desired_temperature_celsius?: number | undefined;
    desired_temperature_fahrenheit?: number | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_reached_set_point";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
    desired_temperature_celsius?: number | undefined;
    desired_temperature_fahrenheit?: number | undefined;
}>;
export type TemperatureReachedSetPointEvent = z.infer<typeof temperature_reached_set_point_event>;
export declare const temperature_changed_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.temperature_changed">;
    temperature_celsius: z.ZodNumber;
    temperature_fahrenheit: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_changed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_changed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type TemperatureChangedEvent = z.infer<typeof temperature_changed_event>;
export declare const device_name_changed_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.name_changed">;
    device_name: z.ZodString;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    device_name: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.name_changed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    device_name: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.name_changed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>;
export type DeviceNameChangedEvent = z.infer<typeof device_name_changed_event>;
export declare const device_events: readonly [z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.connected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.added">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.added";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.added";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.converted_to_unmanaged">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.converted_to_unmanaged";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.converted_to_unmanaged";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.unmanaged.converted_to_managed">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.converted_to_managed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.converted_to_managed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.unmanaged.connected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.disconnected">;
    error_code: z.ZodEnum<["account_disconnected", "hub_disconnected", "device_disconnected"]>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    error_code: "account_disconnected" | "hub_disconnected" | "device_disconnected";
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    error_code: "account_disconnected" | "hub_disconnected" | "device_disconnected";
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.unmanaged.disconnected">;
    error_code: z.ZodEnum<["account_disconnected", "hub_disconnected", "device_disconnected"]>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    error_code: "account_disconnected" | "hub_disconnected" | "device_disconnected";
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    error_code: "account_disconnected" | "hub_disconnected" | "device_disconnected";
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.unmanaged.disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.tampered">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.tampered";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.tampered";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.low_battery">;
    battery_level: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    battery_level: number;
    event_id: string;
    occurred_at: string;
    event_type: "device.low_battery";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    battery_level: number;
    event_id: string;
    occurred_at: string;
    event_type: "device.low_battery";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.battery_status_changed">;
    battery_status: z.ZodEnum<["critical", "low", "good", "full"]>;
    battery_level: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    battery_level: number;
    event_id: string;
    occurred_at: string;
    event_type: "device.battery_status_changed";
    battery_status: "critical" | "low" | "good" | "full";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    battery_level: number;
    event_id: string;
    occurred_at: string;
    event_type: "device.battery_status_changed";
    battery_status: "critical" | "low" | "good" | "full";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.removed">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.removed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.removed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.deleted">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.deleted";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.deleted";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.third_party_integration_detected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.third_party_integration_detected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.third_party_integration_detected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.third_party_integration_no_longer_detected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.third_party_integration_no_longer_detected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.third_party_integration_no_longer_detected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.salto.privacy_mode_activated">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.salto.privacy_mode_activated";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.salto.privacy_mode_activated";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.salto.privacy_mode_deactivated">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.salto.privacy_mode_deactivated";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.salto.privacy_mode_deactivated";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.connection_became_flaky">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connection_became_flaky";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connection_became_flaky";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.connection_stabilized">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connection_stabilized";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.connection_stabilized";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.error.subscription_required">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.error.subscription_required";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.error.subscription_required";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.error.subscription_required.resolved">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.error.subscription_required.resolved";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.error.subscription_required.resolved";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.accessory_keypad_connected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.accessory_keypad_connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.accessory_keypad_connected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.accessory_keypad_disconnected">;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.accessory_keypad_disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.accessory_keypad_disconnected";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"noise_sensor.noise_threshold_triggered">;
    noise_level_decibels: z.ZodOptional<z.ZodNumber>;
    noise_level_nrs: z.ZodOptional<z.ZodNumber>;
    noise_threshold_id: z.ZodOptional<z.ZodString>;
    noise_threshold_name: z.ZodOptional<z.ZodString>;
    noiseaware_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    minut_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "noise_sensor.noise_threshold_triggered";
    noise_level_nrs?: number | undefined;
    noiseaware_metadata?: Record<string, unknown> | undefined;
    minut_metadata?: Record<string, unknown> | undefined;
    noise_level_decibels?: number | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
    noise_threshold_id?: string | undefined;
    noise_threshold_name?: string | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "noise_sensor.noise_threshold_triggered";
    noise_level_nrs?: number | undefined;
    noiseaware_metadata?: Record<string, unknown> | undefined;
    minut_metadata?: Record<string, unknown> | undefined;
    noise_level_decibels?: number | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
    noise_threshold_id?: string | undefined;
    noise_threshold_name?: string | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"lock.locked">;
    access_code_id: z.ZodOptional<z.ZodString>;
    action_attempt_id: z.ZodOptional<z.ZodString>;
    method: z.ZodEnum<["keycode", "manual", "automatic", "unknown", "seamapi"]>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.locked";
    method: "unknown" | "keycode" | "manual" | "automatic" | "seamapi";
    access_code_id?: string | undefined;
    action_attempt_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.locked";
    method: "unknown" | "keycode" | "manual" | "automatic" | "seamapi";
    access_code_id?: string | undefined;
    action_attempt_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"lock.unlocked">;
    access_code_id: z.ZodOptional<z.ZodString>;
    action_attempt_id: z.ZodOptional<z.ZodString>;
    method: z.ZodEnum<["keycode", "manual", "automatic", "unknown", "seamapi"]>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.unlocked";
    method: "unknown" | "keycode" | "manual" | "automatic" | "seamapi";
    access_code_id?: string | undefined;
    action_attempt_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.unlocked";
    method: "unknown" | "keycode" | "manual" | "automatic" | "seamapi";
    access_code_id?: string | undefined;
    action_attempt_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"lock.access_denied">;
    access_code_id: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.access_denied";
    access_code_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "lock.access_denied";
    access_code_id?: string | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.climate_preset_activated">;
    thermostat_schedule_id: z.ZodNullable<z.ZodString>;
    climate_preset_key: z.ZodString;
    is_fallback_climate_preset: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    climate_preset_key: string;
    device_id: string;
    workspace_id: string;
    created_at: string;
    thermostat_schedule_id: string | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.climate_preset_activated";
    is_fallback_climate_preset: boolean;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    climate_preset_key: string;
    device_id: string;
    workspace_id: string;
    created_at: string;
    thermostat_schedule_id: string | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.climate_preset_activated";
    is_fallback_climate_preset: boolean;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.manually_adjusted">;
    method: z.ZodEnum<["seam", "external"]>;
} & Pick<{
    climate_preset_key: z.ZodOptional<z.ZodString>;
    can_edit: z.ZodOptional<z.ZodBoolean>;
    can_delete: z.ZodOptional<z.ZodBoolean>;
    can_use_with_thermostat_daily_programs: z.ZodOptional<z.ZodBoolean>;
    name: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodNullable<z.ZodString>>>>;
    display_name: z.ZodOptional<z.ZodString>;
    climate_preset_mode: z.ZodOptional<z.ZodOptional<z.ZodEnum<["home", "away", "wake", "sleep", "occupied", "unoccupied"]>>>;
    fan_mode_setting: z.ZodOptional<z.ZodOptional<z.ZodEnum<["auto", "on", "circulate"]>>>;
    hvac_mode_setting: z.ZodOptional<z.ZodOptional<z.ZodEnum<["off", "heat", "cool", "heat_cool", "eco"]>>>;
    cooling_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    heating_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    cooling_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    heating_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    manual_override_allowed: z.ZodOptional<z.ZodBoolean>;
    ecobee_metadata: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        climate_ref: z.ZodString;
        is_optimized: z.ZodBoolean;
        owner: z.ZodEnum<["user", "system"]>;
    }, "strip", z.ZodTypeAny, {
        climate_ref: string;
        is_optimized: boolean;
        owner: "user" | "system";
    }, {
        climate_ref: string;
        is_optimized: boolean;
        owner: "user" | "system";
    }>>>;
}, "fan_mode_setting" | "hvac_mode_setting" | "cooling_set_point_celsius" | "heating_set_point_celsius" | "cooling_set_point_fahrenheit" | "heating_set_point_fahrenheit">, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.manually_adjusted";
    method: "seam" | "external";
    fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
    hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
    cooling_set_point_celsius?: number | undefined;
    heating_set_point_celsius?: number | undefined;
    cooling_set_point_fahrenheit?: number | undefined;
    heating_set_point_fahrenheit?: number | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.manually_adjusted";
    method: "seam" | "external";
    fan_mode_setting?: "auto" | "on" | "circulate" | undefined;
    hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | "eco" | undefined;
    cooling_set_point_celsius?: number | undefined;
    heating_set_point_celsius?: number | undefined;
    cooling_set_point_fahrenheit?: number | undefined;
    heating_set_point_fahrenheit?: number | undefined;
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.temperature_threshold_exceeded">;
    temperature_celsius: z.ZodNumber;
    temperature_fahrenheit: z.ZodNumber;
    upper_limit_celsius: z.ZodNullable<z.ZodNumber>;
    upper_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
    lower_limit_celsius: z.ZodNullable<z.ZodNumber>;
    lower_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    lower_limit_celsius: number | null;
    lower_limit_fahrenheit: number | null;
    upper_limit_celsius: number | null;
    upper_limit_fahrenheit: number | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_threshold_exceeded";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    lower_limit_celsius: number | null;
    lower_limit_fahrenheit: number | null;
    upper_limit_celsius: number | null;
    upper_limit_fahrenheit: number | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_threshold_exceeded";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.temperature_threshold_no_longer_exceeded">;
    temperature_celsius: z.ZodNumber;
    temperature_fahrenheit: z.ZodNumber;
    upper_limit_celsius: z.ZodNullable<z.ZodNumber>;
    upper_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
    lower_limit_celsius: z.ZodNullable<z.ZodNumber>;
    lower_limit_fahrenheit: z.ZodNullable<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    lower_limit_celsius: number | null;
    lower_limit_fahrenheit: number | null;
    upper_limit_celsius: number | null;
    upper_limit_fahrenheit: number | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_threshold_no_longer_exceeded";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    lower_limit_celsius: number | null;
    lower_limit_fahrenheit: number | null;
    upper_limit_celsius: number | null;
    upper_limit_fahrenheit: number | null;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_threshold_no_longer_exceeded";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.temperature_reached_set_point">;
    temperature_celsius: z.ZodNumber;
    temperature_fahrenheit: z.ZodNumber;
    desired_temperature_celsius: z.ZodOptional<z.ZodNumber>;
    desired_temperature_fahrenheit: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_reached_set_point";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
    desired_temperature_celsius?: number | undefined;
    desired_temperature_fahrenheit?: number | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_reached_set_point";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
    desired_temperature_celsius?: number | undefined;
    desired_temperature_fahrenheit?: number | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"thermostat.temperature_changed">;
    temperature_celsius: z.ZodNumber;
    temperature_fahrenheit: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_changed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    temperature_fahrenheit: number;
    temperature_celsius: number;
    connected_account_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "thermostat.temperature_changed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    device_id: z.ZodString;
    connected_account_id: z.ZodString;
    device_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
    connected_account_custom_metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>>;
} & {
    event_type: z.ZodLiteral<"device.name_changed">;
    device_name: z.ZodString;
}, "strip", z.ZodTypeAny, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    device_name: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.name_changed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}, {
    device_id: string;
    workspace_id: string;
    created_at: string;
    connected_account_id: string;
    device_name: string;
    event_id: string;
    occurred_at: string;
    event_type: "device.name_changed";
    device_custom_metadata?: Record<string, string | boolean> | undefined;
    connected_account_custom_metadata?: Record<string, string | boolean> | undefined;
}>];
