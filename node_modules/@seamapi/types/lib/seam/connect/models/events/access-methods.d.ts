import { z } from 'zod';
export declare const access_method_issued_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
} & {
    event_type: z.ZodLiteral<"access_method.issued">;
    code: z.ZodOptional<z.ZodString>;
    is_backup_code: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.issued";
    access_grant_ids: string[];
    code?: string | undefined;
    access_grant_keys?: string[] | undefined;
    is_backup_code?: boolean | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.issued";
    access_grant_ids: string[];
    code?: string | undefined;
    access_grant_keys?: string[] | undefined;
    is_backup_code?: boolean | undefined;
}>;
export type AccessMethodIssuedEvent = z.infer<typeof access_method_issued_event>;
export declare const access_method_card_encoding_required_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
} & {
    event_type: z.ZodLiteral<"access_method.card_encoding_required">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.card_encoding_required";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.card_encoding_required";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}>;
export type AccessMethodCardEncodingRequiredEvent = z.infer<typeof access_method_card_encoding_required_event>;
export declare const access_method_revoked_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
} & {
    event_type: z.ZodLiteral<"access_method.revoked">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.revoked";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.revoked";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}>;
export declare const access_method_deleted_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
} & {
    event_type: z.ZodLiteral<"access_method.deleted">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.deleted";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.deleted";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}>;
export declare const access_method_reissued_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    code: z.ZodOptional<z.ZodString>;
    is_backup_code: z.ZodOptional<z.ZodBoolean>;
} & {
    event_type: z.ZodLiteral<"access_method.reissued">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.reissued";
    access_grant_ids: string[];
    code?: string | undefined;
    access_grant_keys?: string[] | undefined;
    is_backup_code?: boolean | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.reissued";
    access_grant_ids: string[];
    code?: string | undefined;
    access_grant_keys?: string[] | undefined;
    is_backup_code?: boolean | undefined;
}>;
export type AccessMethodRevokedEvent = z.infer<typeof access_method_revoked_event>;
export declare const access_method_events: readonly [z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
} & {
    event_type: z.ZodLiteral<"access_method.issued">;
    code: z.ZodOptional<z.ZodString>;
    is_backup_code: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.issued";
    access_grant_ids: string[];
    code?: string | undefined;
    access_grant_keys?: string[] | undefined;
    is_backup_code?: boolean | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.issued";
    access_grant_ids: string[];
    code?: string | undefined;
    access_grant_keys?: string[] | undefined;
    is_backup_code?: boolean | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
} & {
    event_type: z.ZodLiteral<"access_method.revoked">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.revoked";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.revoked";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
} & {
    event_type: z.ZodLiteral<"access_method.card_encoding_required">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.card_encoding_required";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.card_encoding_required";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
} & {
    event_type: z.ZodLiteral<"access_method.deleted">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.deleted";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.deleted";
    access_grant_ids: string[];
    access_grant_keys?: string[] | undefined;
}>, z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
    access_method_id: z.ZodString;
    access_grant_ids: z.ZodArray<z.ZodString, "many">;
    access_grant_keys: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    code: z.ZodOptional<z.ZodString>;
    is_backup_code: z.ZodOptional<z.ZodBoolean>;
} & {
    event_type: z.ZodLiteral<"access_method.reissued">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.reissued";
    access_grant_ids: string[];
    code?: string | undefined;
    access_grant_keys?: string[] | undefined;
    is_backup_code?: boolean | undefined;
}, {
    workspace_id: string;
    created_at: string;
    access_method_id: string;
    event_id: string;
    occurred_at: string;
    event_type: "access_method.reissued";
    access_grant_ids: string[];
    code?: string | undefined;
    access_grant_keys?: string[] | undefined;
    is_backup_code?: boolean | undefined;
}>];
