import { z } from 'zod';
export declare const unmanaged_access_code: z.ZodObject<{
    code: z.ZodNullable<z.ZodString>;
    type: z.ZodEnum<["time_bound", "ongoing"]>;
    name: z.ZodNullable<z.ZodString>;
    device_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    starts_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ends_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    errors: z.ZodArray<z.ZodDiscriminatedUnion<"error_code", [z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"smartthings_failed_to_set_access_code">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "smartthings_failed_to_set_access_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "smartthings_failed_to_set_access_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"smartthings_failed_to_set_after_multiple_retries">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "smartthings_failed_to_set_after_multiple_retries";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "smartthings_failed_to_set_after_multiple_retries";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"smartthings_no_free_slots_available">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "smartthings_no_free_slots_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "smartthings_no_free_slots_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"failed_to_set_on_device">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "failed_to_set_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "failed_to_set_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"failed_to_remove_from_device">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "failed_to_remove_from_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "failed_to_remove_from_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"duplicate_code_on_device">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "duplicate_code_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "duplicate_code_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"duplicate_code_attempt_prevented">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "duplicate_code_attempt_prevented";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "duplicate_code_attempt_prevented";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"no_space_for_access_code_on_device">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "no_space_for_access_code_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "no_space_for_access_code_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"igloohome_bridge_too_many_pending_jobs">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "igloohome_bridge_too_many_pending_jobs";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "igloohome_bridge_too_many_pending_jobs";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"igloohome_bridge_offline">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "igloohome_bridge_offline";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "igloohome_bridge_offline";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"igloohome_offline_access_code_no_variance_available">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "igloohome_offline_access_code_no_variance_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "igloohome_offline_access_code_no_variance_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"kwikset_unable_to_confirm_code">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "kwikset_unable_to_confirm_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "kwikset_unable_to_confirm_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"kwikset_unable_to_confirm_deletion">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "kwikset_unable_to_confirm_deletion";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "kwikset_unable_to_confirm_deletion";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"code_modified_external_to_seam">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "code_modified_external_to_seam";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "code_modified_external_to_seam";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"august_lock_invalid_code_length">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "august_lock_invalid_code_length";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "august_lock_invalid_code_length";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"august_device_programming_delay">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "august_device_programming_delay";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "august_device_programming_delay";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"august_lock_missing_keypad">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "august_lock_missing_keypad";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "august_lock_missing_keypad";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"august_lock_temporarily_offline">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "august_lock_temporarily_offline";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "august_lock_temporarily_offline";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"salto_ks_user_not_subscribed">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "salto_ks_user_not_subscribed";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "salto_ks_user_not_subscribed";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"hubitat_device_programming_delay">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "hubitat_device_programming_delay";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "hubitat_device_programming_delay";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"hubitat_no_free_positions_available">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "hubitat_no_free_positions_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "hubitat_no_free_positions_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"wyze_duplicate_code_name">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "wyze_duplicate_code_name";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "wyze_duplicate_code_name";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"wyze_potential_duplicate_code">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "wyze_potential_duplicate_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "wyze_potential_duplicate_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"dormakaba_oracode_no_valid_user_level">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "dormakaba_oracode_no_valid_user_level";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "dormakaba_oracode_no_valid_user_level";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        is_access_code_error: z.ZodLiteral<true>;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        error_code: z.ZodLiteral<"kwikset_insufficient_permissions">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: "kwikset_insufficient_permissions";
        is_access_code_error: true;
        created_at?: string | undefined;
    }, {
        message: string;
        error_code: "kwikset_insufficient_permissions";
        is_access_code_error: true;
        created_at?: string | undefined;
    }>, ...(z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"account_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }> | z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"bridge_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }> | z.ZodObject<{
        created_at: z.ZodString;
        message: z.ZodString;
        is_connected_account_error: z.ZodOptional<z.ZodBoolean>;
        is_bridge_error: z.ZodOptional<z.ZodBoolean>;
    } & {
        error_code: z.ZodLiteral<"salto_ks_subscription_limit_exceeded">;
        salto_ks_metadata: z.ZodObject<{
            sites: z.ZodArray<z.ZodObject<{
                site_id: z.ZodString;
                site_name: z.ZodString;
                subscribed_site_user_count: z.ZodNumber;
                site_user_subscription_limit: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }, {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }, {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        }>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"device_offline">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "device_offline";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "device_offline";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"device_removed">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "device_removed";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "device_removed";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"hub_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "hub_disconnected";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "hub_disconnected";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"device_disconnected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "device_disconnected";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "device_disconnected";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"account_disconnected">;
        is_connected_account_error: z.ZodLiteral<true>;
        is_device_error: z.ZodLiteral<false>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error: true;
        is_device_error: false;
    }, {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error: true;
        is_device_error: false;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"empty_backup_access_code_pool">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "empty_backup_access_code_pool";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "empty_backup_access_code_pool";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"august_lock_not_authorized">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "august_lock_not_authorized";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "august_lock_not_authorized";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"august_lock_missing_bridge">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "august_lock_missing_bridge";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "august_lock_missing_bridge";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"salto_ks_subscription_limit_exceeded">;
        is_connected_account_error: z.ZodLiteral<true>;
        is_device_error: z.ZodLiteral<false>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        is_connected_account_error: true;
        is_device_error: false;
    }, {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        is_connected_account_error: true;
        is_device_error: false;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"ttlock_lock_not_paired_to_gateway">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "ttlock_lock_not_paired_to_gateway";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "ttlock_lock_not_paired_to_gateway";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"missing_device_credentials">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "missing_device_credentials";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "missing_device_credentials";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"auxiliary_heat_running">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "auxiliary_heat_running";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "auxiliary_heat_running";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"subscription_required">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "subscription_required";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "subscription_required";
        is_device_error: true;
    }> | z.ZodObject<{
        message: z.ZodString;
        is_device_error: z.ZodLiteral<true>;
        created_at: z.ZodString;
    } & {
        error_code: z.ZodLiteral<"lockly_missing_wifi_bridge">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        created_at: string;
        error_code: "lockly_missing_wifi_bridge";
        is_device_error: true;
    }, {
        message: string;
        created_at: string;
        error_code: "lockly_missing_wifi_bridge";
        is_device_error: true;
    }>)[]]>, "many">;
    warnings: z.ZodArray<z.ZodDiscriminatedUnion<"warning_code", [z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"smartthings_failed_to_set_access_code">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "smartthings_failed_to_set_access_code";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "smartthings_failed_to_set_access_code";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"schlage_detected_duplicate">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "schlage_detected_duplicate";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "schlage_detected_duplicate";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"schlage_creation_outage">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "schlage_creation_outage";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "schlage_creation_outage";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"code_modified_external_to_seam">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "code_modified_external_to_seam";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "code_modified_external_to_seam";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"delay_in_setting_on_device">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "delay_in_setting_on_device";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "delay_in_setting_on_device";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"delay_in_removing_from_device">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "delay_in_removing_from_device";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "delay_in_removing_from_device";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"third_party_integration_detected">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "third_party_integration_detected";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "third_party_integration_detected";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"august_device_programming_delay">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "august_device_programming_delay";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "august_device_programming_delay";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"august_lock_temporarily_offline">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "august_lock_temporarily_offline";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "august_lock_temporarily_offline";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"igloo_algopin_must_be_used_within_24_hours">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "igloo_algopin_must_be_used_within_24_hours";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "igloo_algopin_must_be_used_within_24_hours";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"management_transferred">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "management_transferred";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "management_transferred";
        created_at?: string | undefined;
    }>, z.ZodObject<{
        message: z.ZodString;
        created_at: z.ZodOptional<z.ZodString>;
    } & {
        warning_code: z.ZodLiteral<"kwikset_unable_to_confirm_code">;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: "kwikset_unable_to_confirm_code";
        created_at?: string | undefined;
    }, {
        message: string;
        warning_code: "kwikset_unable_to_confirm_code";
        created_at?: string | undefined;
    }>]>, "many">;
    access_code_id: z.ZodString;
} & {
    is_managed: z.ZodLiteral<false>;
    status: z.ZodEnum<["set"]>;
}, "strip", z.ZodTypeAny, {
    code: string | null;
    type: "time_bound" | "ongoing";
    status: "set";
    name: string | null;
    device_id: string;
    workspace_id: string;
    created_at: string;
    errors: ({
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "device_offline";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "device_removed";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "hub_disconnected";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "device_disconnected";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error: true;
        is_device_error: false;
    } | {
        message: string;
        created_at: string;
        error_code: "empty_backup_access_code_pool";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "august_lock_not_authorized";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "august_lock_missing_bridge";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        is_connected_account_error: true;
        is_device_error: false;
    } | {
        message: string;
        created_at: string;
        error_code: "ttlock_lock_not_paired_to_gateway";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "missing_device_credentials";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "auxiliary_heat_running";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "subscription_required";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "lockly_missing_wifi_bridge";
        is_device_error: true;
    } | {
        message: string;
        error_code: "smartthings_failed_to_set_access_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "smartthings_failed_to_set_after_multiple_retries";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "code_modified_external_to_seam";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "failed_to_set_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "failed_to_remove_from_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "duplicate_code_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "duplicate_code_attempt_prevented";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "no_space_for_access_code_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "igloohome_bridge_too_many_pending_jobs";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "igloohome_bridge_offline";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "kwikset_unable_to_confirm_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "kwikset_unable_to_confirm_deletion";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "kwikset_insufficient_permissions";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "igloohome_offline_access_code_no_variance_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "august_lock_invalid_code_length";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "august_device_programming_delay";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "august_lock_temporarily_offline";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "august_lock_missing_keypad";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "salto_ks_user_not_subscribed";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "hubitat_device_programming_delay";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "hubitat_no_free_positions_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "smartthings_no_free_slots_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "wyze_duplicate_code_name";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "wyze_potential_duplicate_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "dormakaba_oracode_no_valid_user_level";
        is_access_code_error: true;
        created_at?: string | undefined;
    })[];
    warnings: ({
        message: string;
        warning_code: "smartthings_failed_to_set_access_code";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "august_device_programming_delay";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "august_lock_temporarily_offline";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "code_modified_external_to_seam";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "schlage_detected_duplicate";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "schlage_creation_outage";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "delay_in_setting_on_device";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "delay_in_removing_from_device";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "third_party_integration_detected";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "igloo_algopin_must_be_used_within_24_hours";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "management_transferred";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "kwikset_unable_to_confirm_code";
        created_at?: string | undefined;
    })[];
    is_managed: false;
    access_code_id: string;
    starts_at?: string | null | undefined;
    ends_at?: string | null | undefined;
}, {
    code: string | null;
    type: "time_bound" | "ongoing";
    status: "set";
    name: string | null;
    device_id: string;
    workspace_id: string;
    created_at: string;
    errors: ({
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "bridge_disconnected";
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        salto_ks_metadata: {
            sites: {
                site_id: string;
                site_name: string;
                subscribed_site_user_count: number;
                site_user_subscription_limit: number;
            }[];
        };
        is_connected_account_error?: boolean | undefined;
        is_bridge_error?: boolean | undefined;
    } | {
        message: string;
        created_at: string;
        error_code: "device_offline";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "device_removed";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "hub_disconnected";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "device_disconnected";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "account_disconnected";
        is_connected_account_error: true;
        is_device_error: false;
    } | {
        message: string;
        created_at: string;
        error_code: "empty_backup_access_code_pool";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "august_lock_not_authorized";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "august_lock_missing_bridge";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "salto_ks_subscription_limit_exceeded";
        is_connected_account_error: true;
        is_device_error: false;
    } | {
        message: string;
        created_at: string;
        error_code: "ttlock_lock_not_paired_to_gateway";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "missing_device_credentials";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "auxiliary_heat_running";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "subscription_required";
        is_device_error: true;
    } | {
        message: string;
        created_at: string;
        error_code: "lockly_missing_wifi_bridge";
        is_device_error: true;
    } | {
        message: string;
        error_code: "smartthings_failed_to_set_access_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "smartthings_failed_to_set_after_multiple_retries";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "code_modified_external_to_seam";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "failed_to_set_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "failed_to_remove_from_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "duplicate_code_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "duplicate_code_attempt_prevented";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "no_space_for_access_code_on_device";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "igloohome_bridge_too_many_pending_jobs";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "igloohome_bridge_offline";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "kwikset_unable_to_confirm_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "kwikset_unable_to_confirm_deletion";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "kwikset_insufficient_permissions";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "igloohome_offline_access_code_no_variance_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "august_lock_invalid_code_length";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "august_device_programming_delay";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "august_lock_temporarily_offline";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "august_lock_missing_keypad";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "salto_ks_user_not_subscribed";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "hubitat_device_programming_delay";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "hubitat_no_free_positions_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "smartthings_no_free_slots_available";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "wyze_duplicate_code_name";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "wyze_potential_duplicate_code";
        is_access_code_error: true;
        created_at?: string | undefined;
    } | {
        message: string;
        error_code: "dormakaba_oracode_no_valid_user_level";
        is_access_code_error: true;
        created_at?: string | undefined;
    })[];
    warnings: ({
        message: string;
        warning_code: "smartthings_failed_to_set_access_code";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "august_device_programming_delay";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "august_lock_temporarily_offline";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "code_modified_external_to_seam";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "schlage_detected_duplicate";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "schlage_creation_outage";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "delay_in_setting_on_device";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "delay_in_removing_from_device";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "third_party_integration_detected";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "igloo_algopin_must_be_used_within_24_hours";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "management_transferred";
        created_at?: string | undefined;
    } | {
        message: string;
        warning_code: "kwikset_unable_to_confirm_code";
        created_at?: string | undefined;
    })[];
    is_managed: false;
    access_code_id: string;
    starts_at?: string | null | undefined;
    ends_at?: string | null | undefined;
}>;
export type UnmanagedAccessCode = z.infer<typeof unmanaged_access_code>;
